-------------------------------------------- SCREEN 000
(                        <12/ 4/85>140) 
                                        
                                        
                                        
          FORTH SOURCE CODE             
                                        
             AS MODIFIED                
                                        
                 BY                     
                                        
              BOB PYRON                 
                                        
                 AND                    
                                        
              FRED HAER                 
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 001
( NF: WORDS AT BEG. SORC <12/17/85>141) 
HEX                                     
                                        
6 ' WIDTH ! FORGET-SYS                  
                                        
NF: X BLK @                             
   IF STATE @ ?STREAM                   
   THEN R> DROP NF;                     
                                        
80C0 'NF X NFA !                        
                                        
NF: ( [COMPILE] ( NF;                   
                                        
NF: \ [COMPILE] \ NF;                   
                                        
NF: GAP 0 , NF;                         
                                        
NF: LITERAL [COMPILE] LITERAL NF;       
                                        
NF: [COMPILE] [COMPILE] [FROM:NEWFORTH] 
   NF;                                  
DECIMAL  -->                            
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 002
( NF: WORDS              < 2/17/85>142) 
NF:  ;CODE  *<;CODE>* , HERERUN         
   [COMPILE] ASSEMBLER ASSEMBLER MEM    
   -2 CSP +! [COMPILE] [ NF;            
                                        
NF: ."  *<.">* , 34 WORD C@ 1+          
   ALLOT NF;                            
                                        
NF: 'NEW 'NF CFANEW 2+ [COMPILE]        
   LITERAL NF;                          
                                        
NF: DOES>  *<;CODE>* , 32 C,            
           *DODOES* , NF;               
                                        
NF: ASSEMBLER [COMPILE] ASSEMBLER       
   ASSEMBLER MEM NF;                    
                                        
NF: ABORT"  *<ABORT">* , 34 WORD        
   C@ 1+ ALLOT NF;                      
                                        
NF: --> ?LOADING 0 >IN ! 1 BLK +!       
   BLK @ DUP SCR ! . NF;                
 -->                                    
                               ( 13:33) 
-------------------------------------------- SCREEN 003
( START-ADDR <I.C. STACKS<12/16/85>143) 
HEX                                     
SETNEW ( INITIALIZE POINTERS )          
                                        
ASSEMBLER MEM                           
                                        
LABEL  START-ADDR CLD, 6C # LDA, W 1 -  
  STA, 01 # LDY,                        
  BEGIN, AAAA ,Y LDA, IP ,Y STA, DEY, 0<
  UNTIL, BBBB JMP,                      
                                        
LABEL JMP-TO 0 , MOVEWORD?              
                                        
  JMP-TO  START-ADDR DELTA + 08 + !NEW  
                                        
DECIMAL  -->                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 004
( EXIT [SETUP] LIT       <12/21/85>144) 
LABEL SETUP .A ASL, N 1 - STA,          
  BEGIN, BOT LDA, N ,Y STA, INX, INY,   
   N 1 - CPY, 0=                        
  UNTIL, 00 # LDY, RTS,                 
                                        
CODE LIT  IP )Y LDA, PHA, IP INC, 0=    
  IF, IP 1+ INC, THEN, IP )Y LDA,       
  IP INC, 0= IF, IP 1+ INC, THEN,       
 LABEL PUSH DEX, DEX,                   
 LABEL PUT BOT 1+ STA, PLA, BOT STA,    
 LABEL NEXT 1 # LDY, IP )Y LDA, W 1+    
  STA, DEY, IP )Y LDA, W STA, CLC,      
  IP LDA, 2 # ADC, IP STA, CS           
  IF, IP 1+ INC, THEN, W 1 - JMP, C;    
                                        
CODE EXIT  PLA, IP STA,                 
  PLA, IP 1+ STA, NEXT JMP, C;          
                                        
CODE <EXIT> C;                          
                                        
 'NEW EXIT -2 BYTE:IN <EXIT> !NEW       
 'NEW LIT 2- ' NF*LIT* !                
-->                            (  PAI ) 
-------------------------------------------- SCREEN 005
( SP0 R0 SP! RP!         <12/16/85>145) 
HEX                                     
LABEL SP00 00D0 ,                       
LABEL RP00 01FF , MOVEWORD?             
                                        
CODE SP0  DEX, DEX,                     
  SP00 #LO LDA, BOT STA,                
  SP00 #HI LDA, BOT 1+ STA,             
  NEXT JMP, C;                          
                                        
CODE R0  DEX, DEX,                      
  RP00 #LO LDA, BOT STA,                
  RP00 #HI LDA, BOT 1+ STA,             
  NEXT JMP, C;                          
                                        
CODE SP!  SP00 LDX, NEXT JMP, C;        
                                        
CODE RP!  XSAVE STX, RP00 LDX, TXS,     
  XSAVE LDX, NEXT JMP, C;               
                                        
'NEW RP!  ASSEMBLER START-ADDR          
     FORTH 11 ( HEX) + DELTA +  !NEW    
                                        
DECIMAL -->                    ( bobp ) 
-------------------------------------------- SCREEN 006
( EXECUTE BRANCH 0BRANCH <12/16/85>146) 
HEX                                     
CODE EXECUTE BOT LDA, W STA, BOT 1+     
  LDA, W 1+ STA, INX, INX, W 1 - JMP, C;
                                        
CODE BRANCH C;                          
                                        
CODE 0BRANCH INX, INX, FE ,X LDA, FF    
  ,X ORA, 0=                            
  IF,                                   
LABEL BR: CLC, IP )Y LDA, IP ADC,       
   PHA, INY, IP )Y LDA, IP 1+ ADC, IP   
   1+ STA, PLA, IP STA, NEXT 2+ JMP,    
  THEN,                                 
LABEL BUMP: CLC, IP LDA, 2 # ADC,       
  IP STA, CS IF, IP 1+ INC, THEN,       
  NEXT JMP, C;                          
                                        
  ASSEMBLER BR:                         
     FORTH -02 BYTE:IN BRANCH  !NEW     
DECIMAL -->                             
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 007
( <LOOP>                 < 2/17/85>147) 
                                        
HEX                                     
CODE <LOOP> XSAVE STX, TSX, RP) INC, 0= 
  IF, RP) 1+ LDA, CLC, 1 # ADC,         
   RP) 1+ STA,                          
  ELSE, CLV,                            
  THEN, 50 NOT ( OV NOT )               
  IF,                                   
LABEL L+:  SEC, RP) LDA, RP) 2+ SBC,    
   RP) 1+ LDA, RP) 3 + SBC,             
LABEL L+/-:   50                        
     IF, 80 # EOR,                      
     THEN, 0<                           
     IF,                                
LABEL LBR:                              
     0 # LDY, XSAVE LDX, BR: JMP,       
     THEN,                              
  THEN,                                 
LABEL LXT: INX, INX, INX, INX, TXS,     
   XSAVE LDX, BUMP: JMP, C;             
                                        
                                        
DECIMAL -->                    ( 13:33) 
-------------------------------------------- SCREEN 008
( <+LOOP> LEAVE          < 1/31/85>148) 
                                        
HEX                                     
CODE <+LOOP>  CLC, BOT 1+ LDY, BOT LDA, 
   INX, INX, XSAVE STX, TSX, RP) ADC,   
   RP) STA, TYA, RP) 1+ ADC, RP) 1+ STA,
   50 NOT                               
  IF, TYA, 0<                           
     IF, SEC, RP) 2+ LDA, RP) SBC,      
      RP) 3 + LDA, RP) 1+ SBC,          
      L+/-: JMP,                        
     THEN, L+: JMP,                     
  THEN, LXT: JMP, C;                    
                                        
                                        
CODE LEAVE  XSAVE STX, TSX, RP) LDA,    
  RP) 2+ STA, RP) 1+ LDA, RP) 3 + STA,  
  XSAVE LDX, NEXT JMP, C;               
                                        
DECIMAL                                 
-->                                     
                                        
                                        
                                        
-------------------------------------------- SCREEN 009
( </LOOP>                < 1/31/85>149) 
                                        
HEX                                     
CODE </LOOP>  CLC, BOT 1+ LDY, BOT LDA, 
   INX, INX, XSAVE STX, TSX, RP) ADC,   
   RP) STA, TYA, RP) 1+ ADC, RP) 1+ STA,
   TYA, 0<                              
   IF, CS                               
      IF, SEC, RP) 2+ LDA, RP) SBC,     
       RP) 3 + LDA, RP) 1+ SBC, CS NOT  
         IF, LBR: JMP,                  
         THEN,                          
      THEN,                             
   ELSE, CS NOT                         
      IF, SEC, RP) LDA, RP) 2+ SBC,     
       RP) 1+ LDA, RP) 3 + SBC, CS NOT  
         IF, LBR: JMP,                  
         THEN,                          
      THEN,                             
   THEN, LXT: JMP, C;                   
                                        
DECIMAL -->                             
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 010
( <DO> I I' J            < 1/31/85>150) 
                                        
CODE <DO> SEC 1+ LDA, PHA, SEC LDA,     
  PHA, BOT 1+ LDA, PHA, BOT LDA, PHA,   
LABEL POPTWO INX, INX,                  
LABEL POP INX, INX, NEXT JMP, C;        
                                        
CODE I  XSAVE STX, TSX, RP) LDA, PHA,   
  RP) 1+ LDA, XSAVE LDX, PUSH JMP, C;   
                                        
CODE I' XSAVE STX, TSX, RP) 2+ LDA, PHA,
  RP) 3 + LDA, XSAVE LDX, PUSH JMP, C;  
                                        
CODE J  XSAVE STX, TSX, RP) 4 + LDA,    
  PHA, RP) 5 + LDA, XSAVE LDX,          
  PUSH JMP, C;                          
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 011
( R@ R> >R SP@ RP@       <12/16/85>151) 
                                        
CODE R@ C;                              
                                        
CODE R>  DEX, DEX, PLA, BOT STA, PLA,   
  BOT 1+ STA, NEXT JMP, C;              
                                        
CODE >R  BOT 1+ LDA, PHA, BOT LDA, PHA, 
  INX, INX, NEXT JMP, C;                
                                        
CODE SP@  TXA,                          
 LABEL PUSH0A PHA, 0 # LDA, PUSH JMP, C;
                                        
CODE RP@  XSAVE STX, TSX, TXA,          
  XSAVE LDX, DEX, DEX, BOT STA, BOT INC,
  RP00 1+ LDA, BOT 1+ STA, NEXT JMP, C; 
                                        
'NEW I  -02 BYTE:IN R@  !NEW            
-->                                     
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 012
( AND XOR OR             <12/16/85>152) 
                                        
CODE AND                                
  BOT LDA, SEC AND, PHA,                
  BOT 1+ LDA, SEC 1+ AND, INX, INX,     
  PUT JMP, C;                           
                                        
CODE XOR                                
  BOT LDA, SEC EOR, PHA,                
  BOT 1+ LDA, SEC 1+ EOR, INX, INX,     
  PUT JMP, C;                           
                                        
CODE OR                                 
  BOT LDA, SEC ORA, PHA,                
  BOT 1+ LDA, SEC 1+ ORA, INX, INX,     
  PUT JMP, C;                           
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 013
( OVER DROP ?DUP DUP     < 1/31/85>153) 
HEX                                     
CODE OVER SEC LDA, PHA, SEC 1+ LDA,     
  PUSH JMP, C;                          
                                        
CODE DROP POP HERE 2 - ! C;             
                                        
CODE DUP BOT LDA, PHA, BOT 1+ LDA,      
  PUSH JMP, C;                          
                                        
CODE ?DUP BOT LDA, BOT FE + STA,        
  BOT 1+ ORA, 0=                        
  IF, NEXT JMP, THEN, BOT 1+ LDA,       
  BOT FF + STA, DEX, DEX, NEXT JMP, C;  
DECIMAL -->                             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 014
( SWAP ROT DDROP DDUP    < 1/31/85>154) 
                                        
CODE SWAP SEC LDA, PHA, BOT LDA,        
  SEC STA, SEC 1+ LDA, BOT 1+ LDY,      
  SEC 1+ STY, PUT JMP, C;               
                                        
CODE DDROP POPTWO HERE 2 - ! C;         
                                        
CODE DDUP  03 # LDY,                    
  BEGIN, DEX, BOT 4 + LDA, BOT STA,     
   DEY, 0<                              
  UNTIL, NEXT JMP, C;                   
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 015
( ROLL PICK              < 1/31/85>155) 
HEX                                     
LABEL P&R XSAVE STX, BOT LDA, .A ASL,   
  XSAVE ADC, TAX, BOT LDA, RTS,         
                                        
CODE ROLL                               
 LABEL ROLL: P&R JSR, XSAVE CPX, 0< NOT 
  IF, DROP 0=                           
   IF, DROP SWAP 2                      
   THEN, XSAVE LDX, POP JMP,            
   2 THEN, PHA, BOT 1+ LDA,             
  BEGIN, BOT FF + LDY, BOT 1+ STY, DEX, 
   XSAVE CPX, 0=                        
  UNTIL, INX, INX, PUT JMP, C;          
                                        
CODE PICK  P&R JSR, PHA, BOT 1+ LDA,    
  XSAVE LDX, PUT JMP, C;                
                                        
DECIMAL -->                             
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 016
( ROT @ C@ !             < 1/31/85>156) 
                                        
CODE ROT DEX, BOT STY, DEX, 03 # LDA,   
  BOT STA, ROLL: JMP, C;                
                                        
CODE @ BOT X) LDA, PHA, BOT INC, 0=     
  IF, BOT 1+ INC, THEN, BOT X) LDA,     
  PUT JMP, C;                           
                                        
CODE C@ BOT X) LDA, BOT STA, BOT 1+     
  STY, NEXT JMP, C;                     
                                        
CODE ! SEC LDA, BOT X) STA, BOT INC, 0= 
  IF, BOT 1+ INC, THEN, SEC 1+ LDA,     
  BOT X) STA, POPTWO JMP, C;            
                                        
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 017
( C! +! +C! + -          < 1/31/85>157) 
                                        
CODE C! SEC LDA, BOT X) STA, POPTWO JMP,
  C;                                    
                                        
CODE +! CLC, BOT X) LDA, SEC ADC,       
  BOT X) STA, BOT INC, 0=               
  IF, BOT 1+ INC,                       
  THEN, BOT X) LDA, SEC 1+ ADC,         
  BOT X) STA, POPTWO JMP, C;            
                                        
CODE +C!  CLC, BOT X) LDA, SEC ADC,     
  BOT X) STA, POPTWO JMP, C;            
                                        
CODE + CLC, BOT LDA, SEC ADC, SEC STA,  
  BOT 1+ LDA, SEC 1+ ADC, SEC 1+ STA,   
  INX, INX, NEXT JMP, C;                
                                        
CODE -  SEC, SEC LDA, BOT SBC, SEC STA, 
  SEC 1+ LDA, BOT 1+ SBC, SEC 1+ STA,   
  INX, INX, NEXT JMP, C;                
 -->                                    
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 018
( 0< < > 0>              < 1/31/85>158) 
HEX                                     
                                        
CODE 0< BOT 1+ ASL, TYA, .A ROL,        
  BOT 1+ STY, BOT STA, NEXT JMP, C;     
                                        
CODE <  SEC, SEC LDA, BOT SBC,          
  SEC 1+ LDA, BOT 1+ SBC,               
LABEL <>: SEC 1+ STY, 50                
  IF, 80 # EOR, THEN, 0<                
  IF, INY, THEN, SEC STY, POP JMP, C;   
                                        
CODE >  SEC, BOT LDA, SEC SBC,          
  BOT 1+ LDA, SEC 1+ SBC, <>: JMP, C;   
                                        
CODE 0>  BOT 1+ LDA, 0<                 
  IF, BOT STY,                          
  ELSE, BOT ORA, BOT STY, 0= NOT        
   IF, BOT INC, THEN,                   
  THEN, BOT 1+ STY, NEXT JMP, C;        
DECIMAL -->                             
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 019
( NEGATE NOT 0= =        <12/21/85>159) 
                                        
CODE NEGATE SEC,                        
LABEL NEG: TYA, BOT SBC, BOT STA,       
  TYA, BOT 1+ SBC, BOT 1+ STA,          
  NEXT JMP, C;                          
                                        
CODE NOT BOT LDA, BOT 1+ ORA, BOT 1+    
  STY, 0=                               
  IF, INY, THEN, BOT STY, NEXT JMP, C;  
                                        
CODE 0= C;                              
                                        
 'NEW NOT  -02 BYTE:IN 0=  !NEW         
                                        
CODE =  SEC, SEC LDA, BOT SBC, BOT STA, 
  SEC 1+ LDA, SEC 1+ STY, BOT 1+ SBC,   
  BOT ORA, 0= IF, INY, THEN, SEC STY,   
  POP JMP, C;                           
                                        
-->                                     
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 020
( U*                     < 1/31/85>160) 
                                        
CODE U* N STY, BOT 3 + LSR, BOT 2+ ROR, 
    TYA, 16 # LDY,                      
   BEGIN, CS                            
      IF, N 1+ STA, CLC, N LDA, BOT ADC,
       N STA, N 1+ LDA, BOT 1+ ADC,     
      THEN, .A ROR, N ROR, BOT 3 + ROR, 
    BOT 2+ ROR, DEY, 0=                 
   UNTIL, BOT 1+ STA, N LDA, BOT STA,   
   NEXT JMP, C;                         
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 021
( U/MOD                  < 1/31/85>161) 
( THE FFFF BELOW WILL BE REPLACED BY  ) 
( ' <Z-DIV>, THE DIVIDE OVERFLOW RTN  ) 
HEX                                     
CODE U/MOD  SEC, SEC LDA, BOT SBC,      
 SEC 1+ LDA, BOT 1+ SBC, CS             
 IF, SP00 LDA, TAX, FFFF JMP,           
 THEN,  ( JUMP IS AT ' U/MOD 10 + )     
 SEC 2+ LDA, SEC LDY, SEC 2+            
 STY, .A ASL, SEC STA, SEC 3 + LDA,     
 SEC 1+ LDY, SEC 3 + STY, .A ROL,       
 SEC 1+ STA, 10 # LDA, N STA,           
 BEGIN, SEC 2+ ROL, SEC 3 + ROL,        
  PHP,                                  
  SEC, SEC 2 + LDA, BOT SBC, TAY,       
  SEC 3 + LDA, BOT 1+ SBC, CS           
  IF, SEC 2+ STY, SEC 3 + STA, PLP,     
   SEC,                                 
  ELSE, PLP, CS                         
   IF, SEC 2+ STY, SEC 3 + STA, THEN,   
  THEN, SEC ROL, SEC 1+ ROL, N DEC, 0=  
 UNTIL, POP JMP, C;                     
                                        
DECIMAL -->                    ( 13:33) 
-------------------------------------------- SCREEN 022
( DIGIT                  < 1/31/85>162) 
                                        
HEX                                     
CODE DIGIT SEC, SEC LDA, 30 # SBC,      
  0< NOT                                
  IF, 0A # CMP, 0< NOT                  
   IF,  SEC, 07 # SBC, 0A # CMP,        
   0< NOT                               
    IF,  4 ROLL 4 ROLL                  
   THEN, BOT CMP, 0<                    
     IF, SEC STA,                       
      1 # LDA, PHA, TYA, PUT JMP,       
     THEN,                              
    THEN,                               
  THEN, TYA, PHA, INX, INX,             
  PUT JMP, C;                           
                                        
DECIMAL       -->                       
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 023
( CMOVE                  < 1/31/85>163) 
                                        
LABEL  CMOVE:                           
  BEGIN,                                
   BEGIN, N CPY, 0=                     
    IF, N 1+ DEC, 0<                    
     IF, NEXT JMP, THEN,                
    THEN, N 4 + )Y LDA, N 2+ )Y STA,    
    INY, 0=                             
   UNTIL, N 5 + INC, N 3 + INC,         
  AGAIN,                                
                                        
( SOURCE DEST COUNT ---, <DOWN MOVE> )  
CODE CMOVE 03 # LDA, SETUP JSR,         
  CMOVE: JMP, C;                        
  -->                                   
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 024
( BMOVE                  < 1/31/85>164) 
                                        
( SOURCE DEST COUNT ---, <UP/DN-MOVE>)  
CODE  BMOVE 3 # LDA, SETUP JSR,         
  SEC, N 2+ LDA, N 4 + SBC, N 3 + LDA,  
  N 5 + SBC, 0< IF, CMOVE: JMP, THEN,   
  CLC, N 1+ LDA, N 3 + ADC, N 3 + STA,  
  CLC, N 1+ LDA, N 5 + ADC, N 5 + STA,  
  N 1+ INC, N LDY,                      
  BEGIN, TYA, 0=                        
   IF, N 1+ DEC, 0=                     
    IF, NEXT JMP, THEN, N 3 + DEC,      
     N 5 + DEC,                         
   THEN, DEY, N 4 + )Y LDA, N 2+ )Y STA,
  AGAIN, C;                             
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 025
( 1+ 2+ 1- 2-            <12/ 4/85>165) 
                                        
CODE 1+                                 
LABEL 1+:                               
   BOT INC, 0= IF, BOT 1+ INC, THEN,    
   NEXT JMP, C;                         
                                        
CODE 2+                                 
   BOT INC, 0= IF, BOT 1+ INC, THEN,    
   1+: JMP, C;                          
                                        
CODE 1-                                 
LABEL 1-:                               
   BOT LDA, 0= IF, BOT 1+ DEC, THEN,    
   BOT DEC, NEXT JMP, C;                
                                        
CODE 2-                                 
   BOT LDA, 0= IF, BOT 1+ DEC, THEN,    
   BOT DEC, 1-: JMP, C;                 
                                        
-->                                     
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 026
( 2* 2/                  < 1/31/85>166) 
                                        
CODE 2*  BOT ASL, BOT 1+ ROL,           
  NEXT JMP, C;                          
                                        
CODE 2/  CLC, BOT 1+ LDA, 0<            
  IF, BOT INC, 0=                       
   IF, BOT 1+ INC, 0=                   
    IF, NEXT JMP, THEN,                 
   THEN, SEC,                           
  THEN, BOT 1+ ROR, BOT ROR,            
  NEXT JMP, C;                          
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 027
( FILL                   < 1/31/85>167) 
                                        
CODE FILL  03 # LDA, SETUP JSR,         
  N 3 + LDA, 0<                         
  IF, NEXT JMP, THEN, N LDA,            
  BEGIN,                                
   BEGIN, N 2 + CPY, 0=                 
    IF, N 3 + DEC, 0<                   
     IF, NEXT JMP, THEN,                
    THEN, N 4 + )Y STA, INY, 0=         
   UNTIL, N 5 + INC,                    
  AGAIN, C;                             
                                        
 -->                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 028
( QTERM ?TERMINAL        < 1/31/85>168) 
HEX                                     
CODE  QTERM C000 BIT, 0<                
  IF, INY, THEN, TYA, PUSH0A JMP, C;    
                                        
CODE ?TERMINAL  C000 BIT, 0<            
  IF, BEGIN, C010 BIT, C000 BIT, 0< NOT 
      UNTIL, INY,                       
  THEN, TYA, PUSH0A JMP, C;             
                                        
DECIMAL -->                             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
-------------------------------------------- SCREEN 029
( NF: WORDS              <12/17/85>169) 
                                        
NF: ;  ?CSP COMPILE [FROM:NEWFORTH]     
   <EXIT> SMUDGE [COMPILE] FORTH        
   [COMPILE] [ NF;                      
                                        
NF: THEN  HERE OVER - SWAP ! NF;        
                                        
NF: BEGIN  HERE NF;                     
                                        
NF: DO  COMPILE [FROM:NEWFORTH] <DO>    
   HERE NF;                             
                                        
NF: LOOP COMPILE [FROM:NEWFORTH] <LOOP> 
   HERE - , NF;                         
                                        
NF: +LOOP  COMPILE [FROM:NEWFORTH]      
   <+LOOP> HERE - , NF;                 
                                        
NF: /LOOP  COMPILE [FROM:NEWFORTH]      
   </LOOP> HERE - , NF;                 
                                        
-->                                     
                               ( bobp ) 
-------------------------------------------- SCREEN 030
( NF: WORDS              <12/17/85>170) 
                                        
NF: UNTIL  COMPILE [FROM:NEWFORTH]      
   0BRANCH HERE - , NF;                 
                                        
NF: AGAIN  COMPILE [FROM:NEWFORTH]      
   BRANCH HERE - , NF;                  
                                        
NF: REPEAT  SWAP                        
    COMPILE [FROM:NEWFORTH] BRANCH      
    HERE - , HERE OVER - SWAP ! NF;     
                                        
NF: IF COMPILE [FROM:NEWFORTH]          
    0BRANCH HERE 0 , NF;                
                                        
NF: ELSE                                
    COMPILE [FROM:NEWFORTH] BRANCH      
    HERE 0 , SWAP HERE OVER -           
    SWAP ! NF;                          
                                        
NF: WHILE                               
    COMPILE [FROM:NEWFORTH] 0BRANCH     
    HERE 0 , NF;                        
-->                            ( bobp ) 
-------------------------------------------- SCREEN 031
( <:> <CONST>            <12/17/85>171) 
                                        
CODE <:>                                
   IP 1+ LDA, PHA, IP LDA, PHA, CLC,    
   W LDA, 02 # ADC, IP STA, TYA,        
   W 1+ ADC, IP 1+ STA, NEXT JMP, C;    
                                        
CODE <CONST>                            
   02 # LDY, W )Y LDA, PHA, INY,        
   W )Y LDA, PUSH JMP, C;               
                                        
'NEW <:>     ' *COLON* !                
'NEW <CONST> ' *CONSTANT* !             
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 032
( <VAR> <DCONST>         <12/17/85>172) 
                                        
CODE <VAR>                              
   CLC, W LDA, 02 # ADC, PHA, TYA,      
   W 1+ ADC, PUSH JMP, C;               
                                        
CODE <DCONST>                           
   04 # LDY,                            
   BEGIN,  INY, DEX, W )Y LDA,          
      BOT STA, DEY, DEY, 0=             
   UNTIL, NEXT JMP, C;                  
                                        
'NEW <VAR>  ' *VARIABLE* !              
'NEW <VAR>  ' *DVARIABLE* !             
'NEW <VAR>  ' *CREATE* !                
'NEW <DCONST>  ' *DCONSTANT* !          
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 033
( 0 1 2                  <12/20/85>173) 
                                        
     0 CONSTANT 0                       
     1 CONSTANT 1                       
     2 CONSTANT 2                       
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 034
( system constants & vars<12/18/85>174) 
HEX                                     
     1 CONSTANT ?AUX                    
     1 CONSTANT ?2E                     
                                        
     2 CONSTANT #BUFF                   
  B600 CONSTANT LIMIT                   
  B1FC CONSTANT FIRST                   
  B1FC CONSTANT MEM-LIMIT               
    20 CONSTANT BL                      
    28 CONSTANT C/L    ( 40 decimal )   
    50 CONSTANT SPE    ( end of stack ) 
                                        
DECIMAL                                 
  VARIABLE DP                           
  VARIABLE ICEBOX    04 NFALLOT         
  VARIABLE CURRENT                      
  VARIABLE CONTEXT   14 NFALLOT         
                  ( see #VOCS scr 212 ) 
  VARIABLE VOC-LINK                     
                                        
  VARIABLE USE                          
  VARIABLE PREV                         
 -->                           ( bobp ) 
-------------------------------------------- SCREEN 035
( system variables       <12/16/85>175) 
                                        
  VARIABLE BLK                          
  VARIABLE SCR                          
                                        
  VARIABLE TIB                          
  VARIABLE >IN                          
                                        
  VARIABLE BASE                         
  VARIABLE DPL                          
  VARIABLE HLD                          
  VARIABLE OUT                          
                                        
  VARIABLE DRIVES                       
  VARIABLE OFFSET                       
  VARIABLE DISK-ERROR                   
                                        
02  00 BYTE:IN DRIVES  !NEW             
                                        
-->                                     
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 036
( D+ DNEGATE U<          <12/16/85>176) 
                                        
CODE D+                                 
 CLC,                                   
 BOT 2+  LDA, BOT 6 + ADC, BOT 6 + STA, 
 BOT 3 + LDA, BOT 7 + ADC, BOT 7 + STA, 
 BOT     LDA, BOT 4 + ADC, BOT 4 + STA, 
 BOT 1+  LDA, BOT 5 + ADC, BOT 5 + STA, 
 POPTWO JMP, C;                         
                                        
CODE DNEGATE                            
  SEC, TYA, SEC SBC, SEC STA,           
  TYA, SEC 1+ SBC, SEC 1+ STA,          
  NEG: JMP, C;                          
                                        
CODE U<                                 
  SEC, SEC LDA, BOT SBC,                
  SEC 1+ LDA, BOT 1+ SBC, SEC 1+ STY,   
  CS NOT IF, INY, THEN, SEC STY,        
  POP JMP, C;                           
                                        
-->                                     
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 037
( S->D ABS DABS MAX MIN  <12/16/85>177) 
                                        
: S->D DUP 0< NEGATE ;                  
                                        
: +-   0< IF NEGATE THEN ;              
: ABS  DUP +- ;                         
                                        
: D+-  0< IF DNEGATE THEN ;             
: DABS DUP D+- ;                        
                                        
: MAX  DDUP < IF SWAP THEN DROP ;       
: MIN  DDUP > IF SWAP THEN DROP ;       
                                        
: DSWAP 4 ROLL 4 ROLL ;                 
: DOVER 4 PICK 4 PICK ;                 
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 038
( BSM $BSM CALL ROMCALL  <12/17/85>178) 
HEX                                     
VARIABLE BSM ( bank-switched mem flag ) 
                                        
CODE $BSM ( subroutine )                
   PHA, TYA, PHA, 'NEW BSM LDY, 0=      
   IF, C081 LDY, ELSE, DEY, 0=          
     IF, C08B LDY, C08B LDY,            
     ELSE, C083 LDY, C083 LDY,          
   THEN, THEN, PLA, TAY, PLA, RTS, C;   
                                        
LABEL CALL:  20 C, 0 C, 0 C, 60 C,      
                                        
CODE CALL ( addr -- )                   
   BOT    LDA, CALL: 1+ STA,            
   BOT 1+ LDA, CALL: 2+ STA,            
   TXA, PHA,  CALL: JSR,  PLA, TAX,     
   'NEW $BSM JSR, POP JMP, C;           
                                        
CODE ROMCALL ( adr -- )                 
 C081 LDA, ( bsm off) 'NEW CALL JMP, C; 
                                        
DECIMAL -->                             
                               ( bobp ) 
-------------------------------------------- SCREEN 039
( RM-W2 R1-W1 R2-W2 etc. <12/16/85>179) 
HEX                                     
                                        
: MON ( jump to system monitor )        
   FF69 ROMCALL ;                       
                                        
: RM-W2 ( rom read & bank 2 write )     
   0 BSM ! 'NEW $BSM CALL ;             
                                        
: R1-W1 ( bank 1 read & write )         
   1 BSM ! 'NEW $BSM CALL ;             
                                        
: R2-W2 ( bank 2 read & write )         
   2 BSM ! 'NEW $BSM CALL ;             
                                        
( copies monitor to banked memory )     
: COPY-MON                              
  RM-W2 F800 DUP 800 CMOVE R2-W2 ;      
                                        
DECIMAL -->                             
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 040
( <EMIT> EMIT PAGE       <12/17/85>180) 
HEX                                     
                                        
CODE <EMIT> ( ch -- )                   
   C081 LDA,         ( bsm off )        
   XSAVE STX,                           
   BOT LDA,                             
   # 80 ORA,         ( set hi bit)      
   0FDED JSR,                           
   XSAVE LDX,                           
   'NEW OUT INC,                        
   0= IF, 'NEW OUT 1+ INC, THEN,        
   'NEW $BSM JSR,    ( bsm on )         
   POP JMP, C;                          
                                        
: EMIT  <EMIT> ;                        
                                        
: PAGE  FC58 ROMCALL ;                  
                                        
DECIMAL -->                             
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 041
( CR <KEY> KEY S0 DEPTH  <12/18/85>181) 
HEX                                     
                                        
: <CR>  0D <EMIT> 0 OUT ! ;             
: CR  <CR> ;                            
                                        
CODE <KEY> ( -- ch )                    
   C081 LDA,        ( bsm off   )       
   FD0C JSR,        ( get key   )       
   # 7F AND,        ( clr hi bit)       
   'NEW $BSM JSR,   ( reset bsm )       
   PUSH0A JMP, C;                       
                                        
: KEY <KEY> ;                           
                                        
: S0     SP0 @ ;                        
                                        
: DEPTH  SP@ S0 SWAP - 2/ ;             
                                        
DECIMAL -->                             
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 042
( <TYPE> TYPE SPACE <."> <12/16/85>182) 
                                        
: SPACE  BL EMIT ;                      
                                        
: SPACES  0 MAX ?DUP                    
   IF 0 DO SPACE LOOP THEN ;            
                                        
: COUNT  DUP 1+ SWAP C@ ;               
                                        
: <TYPE>  0 MAX ?DUP                    
   IF 0 DO COUNT EMIT LOOP THEN DROP ;  
                                        
: TYPE  <TYPE> ;                        
                                        
: <.">  R@ COUNT DUP 1+ R> + >R TYPE ;  
                                        
: -TRAILING ( adr cnt -- adr cnt' )     
   DUP 0                                
   DO DDUP + 1- C@ BL =                 
      IF 1- ELSE LEAVE THEN             
   LOOP ;                               
                                        
'NEW <."> 2 -    ' *<.">* !             
-->                            ( bobp ) 
-------------------------------------------- SCREEN 043
( CONVERT & misc.        <12/18/85>183) 
                                        
: NOOP ;                                
                                        
: HERE  DP @ ;                          
                                        
: PAD   HERE 68 + ;                     
                                        
: CFA   2- ;                            
                                        
: DECIMAL 10 BASE ! ;                   
                                        
: CONVERT                               
   BEGIN                                
      1+ DUP >R C@ BASE @ DIGIT         
   WHILE                                
      SWAP BASE @ U* DROP ROT           
      BASE @ U* D+ DPL @ 1+             
      IF 1 DPL +! THEN R>               
   REPEAT R> ;                          
-->                                     
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 044
( <."> <ABORT"> <DODOES> <12/18/85>184) 
                                        
: <ABORT">                              
   IF GAP     ( @APPENDIX )             
      GAP     ( WHERE1 )                
      SP! CR R@ COUNT TYPE              
      GAP GAP ( FORTH DEFINITIONS )     
      GAP     ( QUIT )                  
   ELSE R> DUP C@ + 1+ >R THEN ;        
                                        
CODE <DODOES>                           
   DEX, DEX, CLC, W LDA,                
   2 # ADC, BOT STA, TYA, W 1+ ADC,     
   BOT 1+ STA, SEC, PLA, 1 # SBC,       
   W STA, PLA, 0 # SBC, W 1+ STA,       
   *COLON* JMP, C;                      
                                        
'NEW <DODOES>    ' *DODOES* !           
'NEW <ABORT"> 2- ' *<ABORT">* !         
-->                                     
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 045
( FORTH ROOT & root words<12/21/85>185) 
                                        
VOCABULARY ROOT                         
VOCABULARY FORTH IMMEDIATE              
                                        
: X ( null word )                       
   BLK @                                
   IF GAP ( STATE )   @                 
      GAP ( ?STREAM )                   
   THEN                                 
   R> DROP ;        ( immediate later ) 
                                        
: DEFINITIONS  NOOP ( for virtuals )    
    CONTEXT @ CURRENT ! ;               
                                        
: VOCABULARY NOOP ;                     
: FORGET NOOP ;                         
: WORDS  NOOP ;                         
: VLIST  NOOP ;                         
: ONLY   NOOP ;                         
: ALSO   NOOP ;                         
                                        
-->                                     
                               (  PAI ) 
-------------------------------------------- SCREEN 046
( <DOVOC>                <12/21/85>186) 
                                        
: <DOVOC> DOES> CONTEXT ! ;             
                                        
'NEW <DOVOC> 2 + ' *VOCAB* !            
                                        
( set CFA of FORTH and ROOT )           
                                        
*VOCAB*  -2 BYTE:IN ROOT   !NEW         
*VOCAB*  -2 BYTE:IN FORTH  !NEW         
                                        
( set voc-link )                        
                                        
'NEW ROOT 04 +  04 BYTE:IN FORTH !NEW   
                                        
( set startup vocabulary )              
                                        
'NEW FORTH 04 + 00 BYTE:IN ICEBOX !NEW  
                                        
-->                                     
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 047
( forward references     <12/17/85>187) 
                                        
: FORGET-SYS NOOP ;  ( unlink any     ) 
                     ( system overlay ) 
                                        
: @APPENDIX  NOOP ; ( relink appendix ) 
                                        
: EXPECT     NOOP ;                     
                                        
: INTERPRET  NOOP ;                     
                                        
                                        
: QUIT NOOP ; \ hook in the word to     
              \ reload APPENDIX here    
                                        
: <ABORT>                               
   SP! [COMPILE] FORTH DEFINITIONS      
   QUIT ;                               
                                        
: QUERY  TIB @ 80 EXPECT 0 >IN ! ;      
                                        
-->                                     
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 048
( BRK-RETN RESET ABORT   <12/16/85>188) 
HEX                                     
                                        
                                        
: ABORT     <ABORT> <ABORT> ;           
: BRK-RETN  <ABORT> <ABORT> ;           
                                        
( This version always sets )            
( bank-switch memory to R2-W2. )        
                                        
CODE RESET  CLD,                        
  RP00 LDX, TXS, SP00 LDX,              
  'NEW BRK-RETN #LO LDA, IP STA,        
  'NEW BRK-RETN #HI LDA, IP 1+ STA,     
  # 2 LDA, 'NEW BSM STA,                
  C083 LDA, C083 LDA,                   
                 ( restore bank-sw mem) 
  'NEW RP! JMP, C;                      
                                        
DECIMAL -->                             
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 049
( M*/ ZERO-DIV           <12/18/85>189) 
HEX                                     
: ZERO-DIV                              
   NOOP ( execution vector )            
   NOOP ( EXIT )                        
   1 ABORT" DIVIDE OVERFLOW" ;          
                                        
CODE <Z-DIV>                            
   'NEW ZERO-DIV #LO LDA, IP STA,       
   'NEW ZERO-DIV #HI LDA, IP 1+ STA,    
   NEXT JMP, C;                         
                                        
: M*/  DDUP XOR SWAP ABS >R SWAP ABS    
   >R OVER XOR ROT ROT DABS SWAP R@ U*  
   ROT R> U* ROT 0 D+ R@ U/MOD ROT ROT  
   R> U/MOD SWAP DROP SWAP ROT D+- ;    
                                        
                                        
'NEW <Z-DIV>  10 BYTE:IN U/MOD  !NEW    
                                        
DECIMAL -->                             
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 050
( M* M+ M/ /MOD M/MOD    <12/16/85>190) 
                                        
: M*     DDUP XOR >R ABS SWAP ABS U*    
         R> D+- ;                       
                                        
: M+     S->D D+ ;                      
                                        
: M/     OVER >R >R DUP D+- R@ ABS      
         U/MOD R> R@ XOR +- SWAP        
         R> +- SWAP ;                   
                                        
: /MOD   >R S->D R> M/ ;                
                                        
: M/MOD  >R 0 R@ U/MOD R> SWAP >R       
         U/MOD R> ;                     
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 051
( MOD / * */MOD */       <12/16/85>191) 
                                        
: MOD    /MOD DROP ;                    
                                        
: /      /MOD SWAP DROP ;               
                                        
: *      U* DROP ;                      
                                        
: */MOD  >R M* R> M/ ;                  
                                        
: */     */MOD SWAP DROP ;              
-->                                     
                                        
( CODE VERSION AVAILABLE, BUT IT IS   ) 
( 162 BYTES.   3.3 TIMES FASTER.      ) 
( SEE SCREEN 264 OF SOURCE CODE LISTNG) 
( IF YOU NEED A FAST SCALING */.      ) 
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 052
( HOLD <# # #> #S SIGN   <12/16/85>192) 
                                        
: HOLD   -1 HLD +! HLD @ C! ;           
                                        
: <#     PAD HLD ! ;                    
                                        
: #      BASE @ M/MOD ROT 9 OVER <      
         IF 7 + THEN                    
         48 + HOLD ;                    
                                        
: #>     DDROP HLD @ PAD OVER - ;       
                                        
: #S     BEGIN # DDUP OR NOT UNTIL ;    
                                        
: SIGN   0< IF 45 HOLD THEN ;           
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 053
( D.R D. U. U.R . .R     <12/16/85>193) 
                                        
: D.R                                   
   DEPTH 3 <                            
   IF CR ." EMPTY STACK" SP!            
   ELSE                                 
      >R SWAP OVER DUP D+-              
         <# #S ROT SIGN #>              
      R> OVER - SPACES TYPE             
   THEN ;                               
                                        
: D.  0 D.R SPACE ;                     
                                        
: U.  0 D. ;                            
                                        
: U.R 0 SWAP D.R ;                      
                                        
: .   S->D D. ;                         
                                        
: .R  >R S->D R> D.R ;                  
                                        
-->                                     
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 054
( DISK CONSTANTS         <12/16/85>194) 
HEX                                     
    10 CONSTANT SECS/TRK                
    23 CONSTANT TRKS/HD                 
     1 CONSTANT HDS/DRV                 
  BFB8 CONSTANT DOSRD                   
  BFC8 CONSTANT DOSWR                   
DECIMAL -->                             
                                        
NOTE: SAVE-FORTH COPIES DOSWR TO DOSRD  
TO PREVENT A NO-NO.  DOSRD IS THE TABLE 
FOR READING FROM DISK AND DOSWR IS THE  
TABLE FOR WRITING.   SAMPLE:            
                                        
        VARIABLE ALTSKEW -2 DP +!       
         D00 , 90B , 507 , 103 ,        
         C0E , 80A , 406 , F02 ,        
                                        
ALTSKEW DOSRD 16 ( DECIMAL) CMOVE       
                                        
WILL INSTALL ALTSKEW AS THE READ TABLE. 
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 055
( <RWTS>                 <12/16/85>195) 
                                        
HEX                                     
( IMPLEMENTATON, RETURNS FLAG )         
CODE <RWTS>                             
   B65E JSR, NEXT JMP, C;               
                                        
DECIMAL -->                             
                                        
( DOSRWTS IS IN DOS AT B65E   )         
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 056
( <DISKERR> DISKERR      <12/18/85>196) 
HEX                                     
                                        
: <DISKERR>                             
   CR                                   
   ." BLK# " BLK @ .                    
   ." ERR# " DISK-ERROR @ .             
   QUIT ;                               
                                        
: DISKERR  <DISKERR> ;                  
                                        
( addr slot dr sec tr r/w nsects -- )   
: RWTS                                  
   DEPTH 7 < ABORT" 7 ARGUMENTS NEEDED" 
   6 PICK 10 * B7E9 C!                  
   <RWTS>                               
   DUP DISK-ERROR !                     
   IF DISKERR THEN ;                    
                                        
DECIMAL -->                             
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 057
( NODRIVE <R/W> R/W      <12/16/85>197) 
                                        
: NODRIVE  QUIT ;                       
                                        
( ADDR SCRN R/W<0=WRITE,1=READ> ---, )  
: <R/W>  ROT ROT 4 *                    
   SECS/TRK /MOD TRKS/HD /MOD           
   DUP DRIVES @ < NOT                   
     IF DDROP DDROP DROP NODRIVE THEN   
   2 /MOD 6 SWAP - SWAP                 
   DSWAP 6 ROLL 4 RWTS ;                
                                        
: R/W  <R/W> ;                          
                                        
-->                                     
NOTE: <R/W> ASSUMES THAT CONTROLLER     
CARDS ARE INSTALLED IN DESCENDING ORDER 
STARTING AT SLOT 6, E.G., IF 5 DRIVES   
ARE DECLARED, THERE MUST BE 2 DRIVES    
FOR SLOT 6, 2 DRIVES FOR SLOT 5, AND 1  
DRIVE IN THE DRV 0 POSITION IN SLOT 4.  
IN THIS CASE, SCRN 699 CAN BE ADDRESSED,
SCRN 700 = "NODRIVE"                    
                               ( bobp ) 
-------------------------------------------- SCREEN 058
( UPDATE +BUF BUFFER     <12/16/85>198) 
                                        
: UPDATE                                
   PREV @ @  -32768 OR  PREV @ ! ;      
                                        
: +BUF                                  
   1028 + DUP LIMIT =                   
   IF DROP FIRST THEN                   
   DUP PREV @ - ;                       
                                        
: BUFFER                                
   USE @ PREV @ =                       
   IF USE @ +BUF DROP USE ! THEN        
   USE @ DUP >R                         
   BEGIN +BUF UNTIL USE !               
   R@ @ 0<                              
   IF R@ 2+ R@ @ 32767 AND              
      0 R/W THEN                        
   R@ ! R@ PREV ! R> 2+ ;               
-->                                     
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 059
( FLUSH EMPTY-BUFFERS    <12/16/85>199) 
                                        
: EMPTY-BUFFERS                         
   FIRST LIMIT OVER - 0 FILL            
   FIRST #BUFF 0                        
   DO 32767 OVER ! 1028 + LOOP          
   DROP ;                               
                                        
: SAVE-BUFFERS                          
   FIRST #BUFF 0                        
   DO DUP @ 0<                          
      IF DUP @ 32767 AND                
         OVER 2+ OVER 0 R/W             
         OVER !                         
      THEN 1028 +                       
   LOOP DROP ;                          
                                        
: FLUSH SAVE-BUFFERS EMPTY-BUFFERS ;    
                                        
-->                                     
: FLUSH                                 
   #BUFF 1+ 0                           
   DO 32767 BUFFER DROP LOOP ;          
                               ( bobp ) 
-------------------------------------------- SCREEN 060
( BLOCK ONB              <12/16/85>200) 
                                        
: BLOCK                                 
   OFFSET @ + >R                        
   PREV @                               
   BEGIN                                
      DUP @ R@ - 2*                     
   WHILE                                
      +BUF NOT                          
      IF DROP R@ BUFFER                 
         DUP R@ 1 R/W 2-                
      THEN                              
   REPEAT                               
   DUP PREV ! 2+                        
   R> DROP ;                            
                                        
: ONB 140 + ;                           
                                        
-->                                     
                                        
: ONB                                   
   SECS/TRK TRKS/HD * HDS/DRV * 4 / + ; 
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 061
( MODE40 <?CARD>         <12/16/85>201) 
HEX                                     
CODE MODE40                             
   C051 LDA, C00E STA, C056 LDA,        
   C00C STA, C054 LDA, C000 STA,        
   F0 # LDA, 36 STA, FD # LDA, 37 STA,  
   1B # LDA, 38 STA, FD # LDA, 39 STA,  
   28 # LDA, 21 STA, FF # LDA, 32 STA,  
   NEXT JMP, C;                         
                                        
( CN00 ---, F = 1 IF A CARD INSTALLED ) 
: <?CARD>  DUP C000 =                   
   IF DROP 0                            
   ELSE 0 0 0 3 0                       
      DO 100 0                          
         DO  4 PICK I + C@ +  8 +LOOP   
         ROT                            
      LOOP 3 PICK 3 0                   
      DO DOVER = NOT                    
         5 ROLL 100 < OR                
      LOOP OR DSWAP DDROP OR            
    THEN 0= ;                           
DECIMAL -->                             
                               ( bobp ) 
-------------------------------------------- SCREEN 062
( ?SLOT MODE! PR# IN#    <12/16/85>202) 
DECIMAL                                 
                                        
: NOCARD <ABORT> ;                      
                                        
: ?SLOT  DUP <?CARD> 0=                 
   IF DROP NOCARD THEN ;                
                                        
: PR#  ?DUP                             
    IF 192 + 256 * ?SLOT 54 !           
    ELSE MODE40 THEN ;                  
                                        
: IN#  ?DUP                             
    IF 192 + 256 * ?SLOT 56 !           
    ELSE MODE40 THEN ;                  
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 063
( XY@ XYTAB BEEP 2BEEP   <12/16/85>203) 
HEX                                     
                                        
CODE XY@                                
   DEX, DEX,                            
   24 LDA, BOT STA, BOT 1+ STY,         
   25 LDA, PUSH0A JMP, C;               
                                        
CODE XYTAB                              
   SEC LDY, 24 STY,                     
   BOT LDA, 25 STA,                     
   C081 LDA, ( turn off bsm )           
   FC22 JSR,                            
   'NEW $BSM JSR, ( bsm on )            
   POPTWO JMP, C;                       
                                        
: BEEP  7 EMIT ;                        
                                        
: 2BEEP BEEP BEEP ;                     
                                        
DECIMAL  -->                            
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 064
( ?BOOT GR->APP          <12/16/85>204) 
HEX                                     
  VARIABLE ?BOOT                        
  VARIABLE SYS-SECTS                    
  VARIABLE APP-SECTS                    
                                        
: GR->APP ( get appendix from gr page ) 
   2000 D000 2000 CMOVE                 
   APP-SECTS @                          
   IF F000 6 0                          
      SYS-SECTS @ 10 + SECS/TRK /MOD    
      1 APP-SECTS @ RWTS                
   THEN 0 ?BOOT ! ;                     
                                        
DECIMAL -->                             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 065
( LOGO START-SYS         <12/16/85>205) 
                                        
: LOGO NOOP ;                           
                                        
: START-SYS NOOP ;                      
                                        
BASE-ADDR CONSTANT COLDSTART            
                                        
01  00 BYTE:IN ?BOOT  !NEW              
                                        
DECIMAL -->                             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 066
( COLD                   <12/18/85>206) 
HEX                                     
: COLD  SP!                             
   RM-W2 FBB3 C@ 6 =                    
      DUP 'NEW ?2E ! 'NEW ?AUX !        
   ?2E NOT IF COPY-MON THEN R2-W2       
   ?BOOT @ IF GR->APP THEN              
   ICEBOX     @ VOC-LINK !              
   ICEBOX 2+  @ DP !                    
   ICEBOX 4 + @ 'NEW FORTH !            
   LIMIT 404 #BUFF * -                  
     DUP 'NEW FIRST !  'NEW MEM-LIMIT ! 
   EMPTY-BUFFERS                        
   200 TIB !  FIRST USE !  FIRST PREV ! 
   0 OFFSET !                           
   'NEW RESET DUP  3F2 !  3F9 !         
   3F3 C@  A5 XOR  3F4 C!  4C 3F8 C!    
   DECIMAL LOGO START-SYS ABORT ;       
                                        
 'NEW COLD                              
   ASSEMBLER JMP-TO FORTH DELTA +  !NEW 
                                        
DECIMAL -->                             
                               ( bobp ) 
-------------------------------------------- SCREEN 067
( D< DMAX DMIN           <12/16/85>207) 
                                        
: D<                                    
   ROT DDUP =                           
   IF ROT ROT DNEGATE D+ 0<             
   ELSE SWAP < SWAP DROP                
   THEN SWAP DROP ;                     
                                        
: DMAX                                  
   DOVER DOVER D<                       
   IF DSWAP THEN DDROP ;                
                                        
: DMIN                                  
   DOVER DOVER D< NOT                   
   IF DSWAP THEN DDROP ;                
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 068
( DU< D- D0= D= D> D@ D! <12/18/85>208) 
                                        
: DU<  >R >R -32768 +                   
       R> R> -32768 + D< ;              
                                        
: D-  DNEGATE D+ ;                      
                                        
: D0=  OR 0= ;                          
                                        
: D=  D- D0= ;                          
                                        
: D>  DSWAP D< ;                        
                                        
: D@  DUP @ SWAP 2+ @ SWAP ;            
                                        
: D!  SWAP OVER ! 2+ ! ;                
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 069
( APP-LINK1 APP-LINK2    <12/20/85>209) 
                                        
WIDTH 9 ' WIDTH !                       
                                        
00 CONSTANT APP-LINK1                   
00 CONSTANT APP-LINK2                   
                                        
' WIDTH !                               
                                        
LFA:IN APP-LINK1                        
 00 BYTE:IN APP-LINK1 !NEW              
                                        
LFA:IN APP-LINK2                        
 00 BYTE:IN APP-LINK2 !NEW              
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 070
( system variables       <12/20/85>210) 
APPENDIX                                
31 CONSTANT WIDTH                       
 8 CONSTANT #VOCS ( see CONTEXT scr174) 
                                        
   VARIABLE CSP                         
   VARIABLE STATE                       
   VARIABLE FENCE                       
   VARIABLE >IN-ERR                     
                                        
   VARIABLE PRIOR    ( voc; for search) 
   VARIABLE WARNING                     
   VARIABLE FWARNING ( forward warn? )  
   VARIABLE EPRINT                      
                                        
MAIN                                    
10  00 BYTE:IN >IN-ERR   !NEW           
01  00 BYTE:IN FWARNING  !NEW           
01  00 BYTE:IN WARNING   !NEW           
-->                                     
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 071
( appendix vars          <12/20/85>211) 
APPENDIX                                
                                        
APP-START CONSTANT APP-START            
 VARIABLE OLD-DP                        
 VARIABLE OLD-LATEST                    
 VARIABLE APP-DP                        
 VARIABLE APP-LATEST                    
                                        
                                        
MAIN                                    
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 072
( TRAVERSE LATEST PFA etc<12/18/85>212) 
APPENDIX                                
                                        
: TRAVERSE                              
   SWAP                                 
   BEGIN OVER + 127 OVER C@ < UNTIL     
   SWAP DROP ;                          
                                        
: LATEST  CURRENT @ @ 2+ ;              
                                        
: PFA  1 TRAVERSE 3 + ;                 
                                        
: NFA  3 - -1 TRAVERSE ;                
                                        
: LFA  NFA 2- ;                         
                                        
: PFA-LFA 2- ;                          
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 073
( APPENDIX               <12/20/85>213) 
\ saves current state sets to compile   
\ in appendix (in bsm2)                 
                                        
APPENDIX                                
                                        
: APPENDIX                              
  OLD-DP @ 0= ( don't allow twice )     
  IF                                    
     APP-LINK1  APP-LINK2 ! ( unhook )  
     CURRENT @ @                        
     DUP APP-START !  OLD-LATEST !      
     APP-LATEST @  CURRENT @ !          
     DP @ OLD-DP !                      
     APP-DP @ DP !                      
     65535 'NEW MEM-LIMIT !             
  THEN ;                                
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 074
( MAIN                   <12/20/85>214) 
\ restore compiling to the              
\ main dictionary                       
APPENDIX                                
                                        
: MAIN                                  
  OLD-DP @ 0= NOT ( don't allow word )  
                  ( to execute twice )  
  IF                                    
     APP-LINK1  APP-START !             
     CURRENT @ @                        
     DUP APP-LINK2 ! APP-LATEST !       
     OLD-LATEST @  CURRENT @ !          
     DP @ APP-DP !                      
     OLD-DP @ DP !                      
     0 OLD-DP ! ( set flag )            
     FIRST 'NEW MEM-LIMIT !             
  THEN ;                                
( IMMEDIATE )                           
                                        
MAIN -->                                
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 075
( ?COMP ?CSP ?LDNG ETC.  <12/20/85>215) 
APPENDIX                                
                                        
: ?COMP  STATE @ NOT                    
   ABORT" COMPILE ONLY" ;               
                                        
: ?CSP  SP@ CSP @ -                     
   ABORT" DEFINITION NOT FINISHED" ;    
                                        
: ?LOADING  BLK @ NOT                   
   ABORT" LOADING ONLY" ;               
                                        
: ?PAIRS  -                             
   ABORT" CONDITIONALS NOT PAIRED" ;    
                                        
: ?STACK  SP@ S0 SWAP U<                
   ABORT" STACK UNDERFLOW"              
   SP@ SPE U< ABORT" FULL STACK" ;      
                                        
: ?STREAM                               
   ABORT" INPUT STREAM EXHAUSTED" ;     
                                        
MAIN -->                                
                               ( bobp ) 
-------------------------------------------- SCREEN 076
( TOGGLE SMUDGE IMMED.   <12/20/85>216) 
APPENDIX                                
                                        
CODE TOGGLE                             
  SEC X) LDA, BOT EOR,                  
  SEC X) STA, POPTWO JMP, C;            
                                        
: SMUDGE    LATEST 32 TOGGLE ;          
                                        
: IMMEDIATE LATEST 64 TOGGLE ;          
                                        
: ALLOT DP +! ;                         
                                        
: ,   HERE !  2 ALLOT ;                 
                                        
: C,  HERE C! 1 ALLOT ;                 
                                        
MAIN -->                                
: ALLOT                                 
   >R  MEM-LIMIT 0  DP @ 0 R@ M+  D<    
   ABORT" WENT PAST MEM-LIMIT"          
   R> DP +! ;                           
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 077
( [ ] 'STREAM COMPILE    <12/18/85>217) 
APPENDIX                                
                                        
: HEX  16 BASE ! ;                      
                                        
: [  0 STATE ! ;  IMMEDIATE             
                                        
: ]  192 STATE ! ;                      
                                        
: COMPILE  ?COMP R> DUP 2+ >R @ , ;     
                                        
: 'STREAM                               
   BLK @ ?DUP                           
   IF BLOCK ELSE TIB @ THEN             
   >IN @ + ;                            
                                        
: <;CODE>  R> LATEST PFA CFA ! ;        
                                        
  'NEW <;CODE> 2- ' *<;CODE>* !         
                                        
MAIN -->                                
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 078
( ENCLOSE                <12/18/85>218) 
APPENDIX HEX                            
CODE ENCLOSE                            
 BOT LDA, N STA, SEC LDA, N 2+ STA,     
 SEC 1+ LDA, N 3 + STA, DEX, DEX,       
 DEX, DEX, SEC 1+ STY, BOT 1+ STY,      
 BEGIN, N 2+ )Y LDA, N CMP, 0=          
 WHILE, INY, 0=                         
   IF, BOT 1+ INC, SEC 1+ INC,          
     SEC 3 + INC, N 3 + INC, THEN,      
 REPEAT, SEC 2+ STY, 0 # CMP, 0=        
   IF, BOT STY, INY, SEC STY, NEXT JMP, 
   THEN,                                
 BEGIN, N 2+ )Y LDA, 0=                 
   IF, BOT STY, SEC STY, NEXT JMP,      
   THEN, N CMP, 0= NOT                  
 WHILE, INY, 0=                         
   IF, BOT 1+ INC, SEC 1+ INC,          
    N 3 + INC, THEN,                    
 REPEAT, SEC STY, INY, 0=               
   IF, BOT 1+ INC, THEN, BOT STY,       
 NEXT JMP, C;                           
DECIMAL MAIN -->                        
                               ( bobp ) 
-------------------------------------------- SCREEN 079
( <<FIND>                <12/18/85>219) 
APPENDIX HEX                            
\ modified; when flag = 0,              
\ then do not search ROOT               
                                        
( here nfa f -- [pfa n' 1] or [0] )     
CODE <<FIND>                            
  XSAVE STX, SEC,                       
  SEC 2 + LDA, 02 # SBC, N 2 + STA,     
  SEC 3 + LDA, 00 # SBC, N 3 + STA,     
( n 2+ holds pointer to name )          
                                        
  02 # LDY, N 2+ )Y LDA, N 1- STA,      
( n 1- holds first byte of name )       
                                        
  SEC,                                  
  SEC    LDA, 02 # SBC, N    STA,       
  SEC 1+ LDA, 00 # SBC, N 1+ STA,       
( n holds pointer to LFA of word )      
( that is currently being tested )      
                                        
  BOT LDA, BOT 1+ ORA, N 4 + STA,       
( n 4+ holds search flag )              
DECIMAL -->                    ( bobp ) 
-------------------------------------------- SCREEN 080
( <<FIND> CONT           <12/18/85>220) 
HEX                                     
                                        
 BEGIN,  02 # LDY, N )Y LDA, 3F # AND,  
  N 1- CMP, 0=  ( count equal? )        
  IF,  ( yes, compare remaining bytes ) 
   BEGIN, INY, N )Y LDA,                
     N 2+ )Y EOR, .A ASL, 0=            
   WHILE,   ( bytes still match )       
     CS   ( at end of word name )       
     IF,  ( return parameters )         
       INY, INY, INY, XSAVE LDX,        
       TYA, CLC, N ADC, SEC 2+ STA,     
       N 1+ LDA, 00 # ADC, SEC 3 + STA, 
            ( replace SEC 2+ with PFA ) 
       02 # LDY, N )Y LDA, SEC STA,     
       0 # LDY, SEC 1+ STY, BOT 1+ STY, 
       INY, BOT STY, NEXT JMP,          
                ( set flag and return ) 
     THEN,                              
   REPEAT,                              
  THEN,                                 
DECIMAL -->                             
                               ( bobp ) 
-------------------------------------------- SCREEN 081
( <<FIND> CONCLD         <12/18/85>221) 
HEX                                     
( try next word in vocab )              
  01 # LDY, N )Y LDA, TAX, DEY,         
  N )Y LDA, N STA, N 1+ STX,            
                                        
( quit when LFA = 0 .. )                
  N 1+ ORA, 0= NOT                      
  IF,      ( .. or, when LFA not 0 .. ) 
    N 4 + LDA, 0=                       
    IF,   ( .. but search flag = 0 .. ) 
      N LDA, 'NEW ROOT #LO CMP, 0=      
      IF, N 1+ LDA, 'NEW ROOT #HI CMP,  
      THEN,      ( .. and LFA = 'ROOT ) 
    THEN,                               
  THEN,  0=                             
 UNTIL,                                 
  ( return false flag )                 
  XSAVE LDX, INX, INX, INX, INX,        
  00 # LDA, BOT STA, BOT 1+ STA,        
  NEXT JMP, C;                          
                                        
DECIMAL MAIN -->                        
                               ( bobp ) 
-------------------------------------------- SCREEN 082
( WORD1 <code version>   <12/18/85>222) 
( adr n1 n2 n3 here --, h a+n1 h1+ c f) 
APPENDIX                                
CODE WORD1  CLC, 'NEW >IN LDA, SEC ADC, 
 'NEW >IN STA, 'NEW >IN 1+ LDA, ( n3 )  
 SEC 1+ ADC, 'NEW >IN 1+ STA, ( >in +!) 
                                        
 SEC, SEC 2+ LDA, SEC 4 + SBC, SEC STA, 
 BOT X) STA, SEC 3 + LDA, SEC 5 + SBC,  
 SEC 1+ STA, ( count = n2 n1 - )        
                                        
 CLC, SEC 6 + LDA, SEC 4 + ADC,         
 SEC 4 + STA, SEC 7 + LDA, SEC 5 + ADC, 
 SEC 5 + STA, ( addr n1 + )             
                                        
 BOT LDA, SEC 6 + STA, 01 # ADC,        
 SEC 2+ STA, BOT 1+ LDA, SEC 7 + STA,   
 00 # ADC, SEC 3 + STA,                 
                                        
 BOT 1+ STY, SEC 1+ LDA, BOT STA,       
 SEC INC, 0= IF, SEC 1+ INC, THEN,      
 NEXT JMP, C;                           
                                        
MAIN -->                       ( bobp ) 
-------------------------------------------- SCREEN 083
( WORD                   <12/18/85>223) 
APPENDIX                                
                                        
: WORD  'STREAM                         
   SWAP ENCLOSE DDUP >                  
   IF DDROP DDROP 0 HERE ! HERE         
   ELSE                                 
      HERE WORD1                        
      ABORT" INPUT > 255" CMOVE         
   THEN ;                               
                                        
MAIN                                    
-->                                     
                                        
: WORD  GAP ( 'STREAM ) SWAP ENCLOSE    
    DDUP > ( HI-LEVEL WORD )            
     IF DDROP DDROP 0 HERE !            
     ELSE >IN +! OVER - DUP >R HERE C!  
      + HERE 1+ R> DUP 255 >            
      ABORT" INPUT > 255" 1+ CMOVE      
     THEN HERE ;                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 084
( NUMBER                 <12/18/85>224) 
APPENDIX                                
                                        
: NUMBER                                
   0 0 ROT                              
   DUP 1+ C@ 45 = DUP >R +              
   -1 DPL ! CONVERT                     
   DUP C@ BL >                          
   IF DUP C@ 46 = NOT                   
      ABORT" NOT RECOGNIZED"            
      0 DPL ! CONVERT                   
      DUP C@ BL >                       
      ABORT" NOT RECOGNIZED"            
   THEN DROP                            
   R> IF DNEGATE THEN ;                 
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 085
( <FIND> -FIND           <12/18/85>225) 
APPENDIX                                
                                        
: <FIND> ( wa -- {pfa n 1} or {0})      
   0 PRIOR !  0         ( wa dummy )    
   #VOCS 0 DO                           
      DROP              ( wa )          
      CONTEXT I 2* + @  ( wa voc )      
      DUP                               
      IF DUP PRIOR @    ( wa vo vo pr ) 
         OVER PRIOR !                   
         = IF DROP 0    ( wa 0 )        
         ELSE           ( wa voc )      
            OVER SWAP   ( wa wa voc )   
            @ 2+ 1 <<FIND>              
            DUP IF LEAVE THEN           
      THEN THEN                         
   LOOP DUP >R IF ROT THEN DROP R> ;    
                                        
MAIN -->                                
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 086
( LITERAL DLITERAL ?STCK <12/18/85>226) 
APPENDIX HEX                            
                                        
: LITERAL                               
   STATE @                              
   IF COMPILE LIT , THEN ; IMMEDIATE    
                                        
: DLITERAL                              
   STATE @                              
   IF SWAP                              
      [COMPILE] LITERAL                 
      [COMPILE] LITERAL                 
   THEN ;  IMMEDIATE                    
                                        
CODE ?STCK                              
  BOT FF + STY, BOT FE + STY,           
  INY, SEC, TXA, 'NEW SPE CMP, CS NOT   
  IF, BOT FE + STY, THEN, DEX, DEX,     
  SP00 CMP, CS IF, BOT STY, THEN,       
  NEXT JMP, C;                          
                                        
DECIMAL MAIN -->                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 087
( -FIND FIND ?FIND ' ['] <12/18/85>227) 
APPENDIX                                
                                        
: -FIND BL WORD <FIND> ;                
                                        
: FIND  -FIND IF DROP CFA ELSE 0 THEN ; 
                                        
: ?FIND -FIND NOT ABORT" NOT FOUND" ;   
                                        
: '     ?FIND DROP [COMPILE] LITERAL ;  
        IMMEDIATE                       
                                        
: [']   ?COMP [COMPILE] ' ; IMMEDIATE   
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 088
( ?CLOSE                 <12/17/85>228) 
HEX APPENDIX                            
                                        
: <INV>  3F 32 C! ;                     
: <NORM> FF 32 C! ;                     
                                        
: ?CLOSE                                
   MEM-LIMIT 100 - HERE U<              
   IF CR CR BEEP                        
      ." APPROACHING MEMORY LIMIT AT "  
      <INV> MEM-LIMIT U. <NORM>         
      CR CR                             
   THEN ;                               
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 089
( CREATE                 <12/18/85>229) 
APPENDIX                                
                                        
: CREATE  ?CLOSE                        
   CURRENT @ @ ,  BL WORD               
   DUP 1+ C@ 0= DUP IF -2 DP +! THEN    
     ABORT" ATTEMPTED TO REDEFINE NULL" 
   DUP <FIND>                           
   IF DDROP WARNING @                   
      IF OUT @ IF CR THEN               
         <INV>  DUP COUNT TYPE          
         <NORM> ."  ISN'T UNIQUE" CR    
   THEN THEN                            
   DUP C@ WIDTH MIN 1+ ALLOT            
   DUP 128 TOGGLE HERE 1- 128 TOGGLE    
   DP C@ 255 =                          
      IF DUP 2- DUP 1+ 1 DP +!          
         HERE OVER - BMOVE 1+           
      THEN                              
   'NEW <VAR> , 2- CURRENT @ ! ;        
                                        
MAIN -->                                
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 090
( : ;                    <12/18/85>230) 
APPENDIX                                
                                        
: :  SP@ CSP !                          
   CURRENT @ CONTEXT !                  
   CREATE  -2 ALLOT  'NEW <:> ,         
   SMUDGE ] ;                           
                                        
: ;  ?CSP COMPILE <EXIT>                
   SMUDGE [COMPILE] [ ; IMMEDIATE       
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 091
( CONSTANT VARIABLE      <12/18/85>231) 
APPENDIX                                
                                        
: CONSTANT                              
   CREATE -2 ALLOT 'NEW <CONST> ,       
   ( val) , ;                           
                                        
: VARIABLE                              
   CREATE 0 , ;                         
                                        
: DCONSTANT                             
   CREATE -2 ALLOT 'NEW <DCONST> ,      
   ( dval) , ,  ;                       
                                        
: DVARIABLE                             
   CREATE 0 , 0 , ;                     
                                        
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 092
( ID.                    <12/16/85>232) 
APPENDIX                                
                                        
: ID. ( nfa -- )                        
   DUP C@ 31 AND SWAP                   
   BEGIN                                
      SWAP 1- SWAP 1+ DUP C@ DUP        
      127 AND EMIT 128 AND              
   UNTIL DROP ?DUP                      
   IF 0 DO 94 EMIT LOOP THEN SPACE ;    
                                        
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 093
( ?FORWARD [COMPILE]     <12/16/85>233) 
APPENDIX                                
                                        
: ?FORWARD ( pfa --  )                  
   HERE OVER U<                         
   FWARNING @ AND                       
   IF OUT @ IF CR THEN                  
      ." FORWARD CALL TO "              
      <INV> NFA ID. <NORM> CR           
   ELSE DROP THEN ;                     
                                        
: [COMPILE]                             
   ?COMP ?FIND DROP                     
   DUP ?FORWARD CFA ,  ; IMMEDIATE      
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 094
( <FORGET>               <12/21/85>234) 
APPENDIX                                
: <<FORGET>>  >R                        
   R@ CONTEXT @ U<                      
    IF [COMPILE] FORTH THEN             
   R@ CURRENT @ U<                      
    IF [COMPILE] FORTH DEFINITIONS THEN 
   VOC-LINK @                           
   BEGIN R@ OVER U< WHILE @ REPEAT      
   DUP VOC-LINK !                       
   BEGIN DUP 4 -                        
      BEGIN @ DUP R@ U< UNTIL           
      OVER 4 - ! @ ?DUP 0=              
   UNTIL R>  DP ! ;                     
                                        
: <FORGET>                              
   BL WORD CURRENT @ @ 2+ 0 <<FIND> 0=  
      ABORT" NOT IN CURRENT VOCABULARY" 
   DROP LFA DUP FENCE @ U<              
      ABORT" IN PROTECTED DICTIONARY"   
   <<FORGET>> ;                         
                                        
MAIN -->                                
                               (  PAI ) 
-------------------------------------------- SCREEN 095
( 'X DOES> ( \           <12/16/85>235) 
APPENDIX                                
                                        
'NEW X CONSTANT 'X                      
                                        
: DOES>                                 
   ?CSP COMPILE <;CODE>                 
   32 C,  'NEW <DODOES> ,               
   ; IMMEDIATE                          
                                        
: (  -1 >IN +!                          
   41 WORD C@ 1+ HERE + C@              
   41 = NOT ?STREAM ;  IMMEDIATE        
                                        
: \  ?LOADING                           
   >IN @ C/L / 1+ C/L * >IN ! ;         
   IMMEDIATE                            
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 096
( <VOCABULARY>           <12/17/85>236) 
APPENDIX                                
                                        
: <VOCABULARY>                          
   CREATE                               
      'NEW ROOT  , 41089 ,              
      HERE VOC-LINK @ ,                 
      VOC-LINK !                        
   <DOVOC> ( DOES> CONTEXT ! ) ;        
                                        
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 097
( <EXPECT>               <12/16/85>237) 
APPENDIX                                
                                        
: <EXPECT>                              
   OVER + OVER                          
   DO KEY DUP 8 = OVER 127 = OR         
      IF DROP DUP I = DUP R> 2- + >R    
         IF 7                           
         ELSE 8 DUP EMIT SPACE          
            -3 OUT +!                   
         THEN                           
      ELSE DUP 13 =                     
         IF LEAVE DROP BL 0             
         ELSE DUP                       
         THEN I C! 0 I 1+ !             
      THEN EMIT 1                       
   /LOOP DROP ;                         
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 098
( <INTERPRET>            <12/18/85>238) 
APPENDIX                                
                                        
: <INTERPRET>                           
   BEGIN                                
      -FIND                             
      IF STATE @ <                      
         IF   DUP ?FORWARD CFA ,        
         ELSE CFA EXECUTE ?STCK         
              IF ?STACK THEN            
         THEN                           
      ELSE HERE NUMBER DPL @ 1+         
         IF   [COMPILE] DLITERAL        
         ELSE DROP [COMPILE] LITERAL    
         THEN                           
      THEN                              
   AGAIN ;                              
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 099
( <QUIT>                 <12/18/85>239) 
APPENDIX                                
                                        
: <QUIT>                                
   0 BLK ! [COMPILE] [                  
   BEGIN                                
      CR RP! QUERY INTERPRET            
      STATE @ NOT                       
      IF ."  OK" THEN                   
   AGAIN ;                              
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 100
( GET:CS ?2E             <12/16/85>240) 
APPENDIX HEX                            
                                        
: GET:CS                                
   ?AUX IF C013 C@ 80 AND 0= 0=         
   ELSE 0 THEN ;                        
                                        
DECIMAL MAIN -->                        
                                        
                                        
MAIN                                    
: ?2E ( -- 0/1 )                        
   RM-W2 FBB3 C@ 6 = R2-W2 ;            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 101
( SAVRD SAVWR            <12/16/85>241) 
HEX APPENDIX                            
                                        
( must be installed in )                
( bank-switched memory )                
                                        
LABEL SAVRD                             
   BOT LDA, N STA,                      
   BOT 1+ LDA, N 1+ STA,                
   C013 LDA, 80 # AND,                  
   .A ROL, 00 # LDA, .A ROL, RTS,       
                                        
LABEL SAVWR                             
   C014 LDA, 80 # AND, .A ROL,          
   00 # LDA, .A ROL, RTS,               
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 102
( C@L @L                 <12/16/85>242) 
HEX APPENDIX                            
                                        
( Y is 0 for byte, 1 for word )         
                                        
CODE C@L                                
   N 1- STY, SAVRD JSR, PHA, SEC LDY,   
   C002 ,Y STA, 00 # LDY, N )Y LDA,     
   SEC STA, N 1- LDY, 0= NOT            
   IF, N )Y LDA, SEC 1+ STA, THEN,      
   PLA, TAY, C002 ,Y STA,               
   INX, INX, RTS, C;                    
                                        
CODE @L                                 
   INY, 'NEW C@L JMP, C;                
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 103
( C!L !L                 <12/16/85>243) 
HEX APPENDIX                            
                                        
( C!L and !L, N is switch  )            
                                        
CODE C!L                                
   N 1- STY, BOT LDA, N STA,            
   BOT 1+ LDA, N 1+ STA,                
   SAVWR JSR, PHA, SEC LDY,             
   C004 ,Y STA, 00 # LDY, SEC 2+ LDA,   
   N )Y STA, N 1- LDY, 0= NOT           
   IF, SEC 3 + LDA, N )Y STA, THEN,     
   PLA, TAY, C004 ,Y STA,               
   TXA, CLC, 6 # ADC, TAX,              
   NEXT JMP, C;                         
                                        
CODE !L                                 
   INY, 'NEW C!L JMP, C;                
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 104
( <CMOVEL>               <12/16/85>244) 
HEX APPENDIX                            
CODE <CMOVEL>                           
  TXA, CLC, 0A # ADC, XSAVE STA,        
  SAVRD JSR, PHA, SAVWR JSR, PHA,       
  SEC LDA, N 2+ STA,                    
  SEC 1+ LDA, N 3 + STA,                
  SEC 4 + LDA, N 4 + STA,               
  SEC 5 + LDA, N 5 + STA,               
  SEC 2 + LDY, C004 ,Y STA,             
  SEC 6 + LDY, C002 ,Y STA, 00 # LDY,   
  BEGIN,                                
    BEGIN, N CPY, 0=                    
      IF, N 1+ DEC, 0<                  
        IF, PLA, TAY, C004 ,Y STA,      
            PLA, TAY, C002 ,Y STA,      
            XSAVE LDX, NEXT JMP,        
      THEN, THEN, N 4 + )Y LDA,         
      N 2+ )Y STA, INY, 0=              
   UNTIL,                               
   N 5 + INC, N 3 + INC, CLC, CS        
  UNTIL, C;                             
DECIMAL MAIN -->                        
                               ( bobp ) 
-------------------------------------------- SCREEN 105
( <RWTSL>                <12/16/85>245) 
HEX APPENDIX                            
\ jumps to subroutine RWTS in DOS area  
\ DOS must be resident in seg to be     
\ turned on                             
                                        
CODE <RWTSL>                            
   SAVRD 8 + JSR, PHA,                  
   SAVWR JSR, PHA,                      
   SEC 0C + LDY, C002 ,Y STA,           
   C004 ,Y STA, 00 # LDY, B65E JSR,     
   BOT LDA, SEC STA,                    
   BOT 1+ LDA, SEC 1+ STA, INX, INX,    
   PLA, TAY, C004 ,Y STA,               
   PLA, TAY, C002 ,Y STA,               
   NEXT JMP, C;                         
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 106
( ?DOSL RWTSL CMOVEL     <12/16/85>246) 
HEX APPENDIX                            
                                        
( installs DOS in other segment )       
: ?DOSL                                 
   GET:CS 1 XOR B600 @L A501 = NOT      
   IF GET:CS B600 GET:CS 1 XOR          
      B600 A00 <CMOVEL>                 
   THEN ;                               
                                        
( seg adr slot dr sec trk r/w nsecs --) 
: RWTSL                                 
   DEPTH 8 < ABORT" 8 arguments needed" 
   ?DOSL 6 PICK 10 * B7E9 C!            
   <RWTSL> DUP DISK-ERROR !             
   IF DISKERR THEN ;                    
                                        
( frseg fradr toseg toadr nbytes -- )   
: CMOVEL                                
   DEPTH 5 < ABORT" need 5 arguments"   
   <CMOVEL> ;                           
                                        
DECIMAL MAIN -->                        
                               ( bobp ) 
-------------------------------------------- SCREEN 107
( DO LOOP +LOOP /LOOP    <12/16/85>247) 
APPENDIX                                
                                        
: DO  ?COMP                             
   COMPILE <DO> HERE 3 ; IMMEDIATE      
                                        
: LOOP   3 ?PAIRS                       
   COMPILE <LOOP> HERE - , ; IMMEDIATE  
                                        
: +LOOP  3 ?PAIRS                       
   COMPILE <+LOOP> HERE - , ; IMMEDIATE 
                                        
: /LOOP 3 ?PAIRS                        
   COMPILE </LOOP> HERE - , ; IMMEDIATE 
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 108
( IF THEN ELSE           <12/16/85>248) 
APPENDIX                                
                                        
: IF                                    
   ?COMP COMPILE 0BRANCH HERE 0 , 2 ;   
   IMMEDIATE                            
                                        
: THEN                                  
   ?COMP 2 ?PAIRS                       
   HERE OVER - SWAP ! ;  IMMEDIATE      
                                        
: ELSE                                  
   2 ?PAIRS COMPILE BRANCH HERE 0 ,     
   SWAP 2 [COMPILE] THEN 2 ;            
   IMMEDIATE                            
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 109
( BEGIN UNTIL AGAIN REPEA<12/16/85>249) 
APPENDIX                                
                                        
: BEGIN  ?COMP HERE 1 ;  IMMEDIATE      
                                        
: UNTIL  1 ?PAIRS COMPILE 0BRANCH       
   HERE - , ;  IMMEDIATE                
                                        
: AGAIN  1 ?PAIRS COMPILE BRANCH        
   HERE - , ;  IMMEDIATE                
                                        
: WHILE  [COMPILE] IF 2+ ;              
     IMMEDIATE                          
                                        
: REPEAT                                
   >R >R [COMPILE] AGAIN                
   R> R> 2- [COMPILE] THEN ;  IMMEDIATE 
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 110
( ABORT"                 <12/16/85>250) 
APPENDIX                                
                                        
: ABORT"                                
   ?COMP COMPILE <ABORT">               
   'STREAM C@ 34 =                      
   IF 1 >IN +!  0 C,                    
   ELSE                                 
      34 WORD                           
      DUP C@ 1+ SWAP OVER +             
      C@ 34 = NOT ?STREAM ALLOT         
   THEN ; IMMEDIATE                     
                                        
: ?NUM   DEPTH 1 < ABORT" NUMBER?" ;    
                                        
: ?2NUM  DEPTH 2 < ABORT" NUMBERS?" ;   
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 111
( ."                     <12/16/85>251) 
APPENDIX                                
                                        
: ."                                    
   'STREAM C@ 34 =                      
   IF 1 >IN +!                          
   ELSE                                 
      STATE @ IF COMPILE <."> THEN      
      34 WORD DUP C@ 1+                 
      OVER + C@ 34 = NOT ?STREAM        
      STATE @                           
      IF C@ 1+ ALLOT                    
         ELSE COUNT TYPE THEN           
   THEN ;  IMMEDIATE                    
                                        
MAIN                                    
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 112
( WHERE1                 <12/18/85>252) 
APPENDIX                                
                                        
: WHERE1                                
   BLK @                                
   IF PAGE BLK @ DUP SCR !              
      CR CR ." SCR# "  DUP .            
      >IN @ 1023 MIN DUP >IN-ERR !      
      C/L /MOD  ." LINE# "  DUP .       
      C/L * ROT BLOCK +                 
      CR CR C/L -TRAILING TYPE          
      >IN @ 1023 > +                    
   ELSE >IN @ THEN                      
   CR HERE C@ DUP >R -                  
   HERE R@ + 1+                         
   C@ BL = IF 1- THEN SPACES            
   R> 0 DO 94 EMIT LOOP ;               
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 113
( FREEZE SYSTEM-SIZE     <12/16/85>253) 
HEX APPENDIX                            
                                        
: FREEZE                                
   VOC-LINK @  ICEBOX !                 
   HERE        ICEBOX 2+ !              
   CURRENT @ @ ICEBOX 4 + ! ;           
                                        
: SYSTEM-SIZE                           
   ( always include graphics page )     
   HERE DUP 4000 U< IF DROP 4000 THEN   
   COLDSTART -                          
   0 100 U/MOD SWAP DROP 1+             
   DUP SYS-SECTS ! ;                    
                                        
: APP->GR ( move appendix to gr page )  
   D000 2000 2000 CMOVE                 
   APP-DP @ F000 -                      
   0 MAX 0 100 U/MOD SWAP 0= 0= +       
   APP-SECTS ! ;                        
                                        
DECIMAL MAIN -->                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 114
( <SF>                   <12/16/85>254) 
HEX APPENDIX                            
: <SF>  NOOP                            
   FORGET-SYS EMPTY-BUFFERS             
   [COMPILE] MAIN                       
   ?BOOT @ IF APP->GR                   
      ELSE 0 APP-SECTS ! THEN           
   [COMPILE] FORTH DEFINITIONS          
   DOSWR DOSRD 10 CMOVE                 
   FREEZE COLDSTART B748 !              
   SYSTEM-SIZE DUP B7E0 C!              
   COLDSTART 0 100 U/MOD SWAP DROP      
      OVER + B7E7 C!                    
   0F + 10 /MOD B715 C! B71A C!         
   B600 6 0 0 0 0 0A RWTS               
   COLDSTART 6 0 0 1 0 SYSTEM-SIZE RWTS 
   APP-SECTS @                          
   IF F000 6 0                          
      SYS-SECTS @ 10 + SECS/TRK /MOD    
      0 APP-SECTS @ RWTS                
   THEN 0 ?BOOT ! ;                     
                                        
DECIMAL MAIN -->                        
                               ( bobp ) 
-------------------------------------------- SCREEN 115
( SAVE-FORTH             <12/16/85>255) 
APPENDIX                                
                                        
: SAVE-FORTH                            
   NOOP FORGET-SYS                      
   1 ?BOOT !  <SF> ;                    
                                        
MAIN -->                                
                                        
: ?SF                                   
   CR CR                                
   ." INITIALIZED DISK IN DRIVE A "     
   (Y/N)? IF <SF> THEN ;                
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 116
( LOAD THRU -->          <12/16/85>256) 
APPENDIX                                
: LOAD                                  
   DUP 0= ABORT" UNLOADABLE" DUP .      
   BLK @ >R >IN @ >R                    
   BLK ! 0 >IN !                        
   INTERPRET                            
   R> >IN ! R> BLK ! ;                  
                                        
: THRU ( first last -- )                
   1+ SWAP                              
   DO I LOAD LOOP ;                     
                                        
: EDIT->LOAD  LOAD ."  OK" QUIT ;       
                                        
: -->                                   
   ?LOADING 0 >IN ! 1 BLK +!            
   BLK @ DUP SCR ! .                    
   ;  IMMEDIATE                         
                                        
MAIN -->                                
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 117
( L#ADDR                 <12/16/85>257) 
APPENDIX HEX                            
                                        
( LINENO. ---, CRTADDR )                
                                        
CODE L#ADDR                             
   BOT LDA, .A LSR, 03 # AND,           
   04 # ORA, BOT 1+ STA,                
   BOT LDA, 18 # AND,                   
   CS IF, 7F # ADC, THEN, BOT STA,      
   .A ASL, .A ASL, BOT ORA, BOT STA,    
   NEXT JMP, C;                         
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 118
( L->CRT40               <12/16/85>258) 
APPENDIX HEX                            
                                        
( MEMADDR L#ADDR DELTX COUNT ---, )     
                                        
CODE L->CRT40                           
   SEC 4 + LDA, N 2 + STA,              
   SEC 5 + LDA, N 3 + STA,              
   SEC 3 + LDA, N 1 + STA,              
   CLC, SEC LDA, SEC 2+ ADC, N STA,     
   BOT LDY, TXA, 08 # ADC, TAX, DEY,    
   BEGIN,                               
      N 2+ )Y LDA, 80 # EOR,            
      N )Y STA, DEY, 0<                 
   UNTIL, NEXT JMP, C;                  
                                        
MAIN DECIMAL -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 119
( BLK->CRT               <12/16/85>259) 
                                        
APPENDIX                                
 24 CONSTANT NLINS                      
  0 CONSTANT +EDY                       
  0 CONSTANT +EDX                       
    VARIABLE BLKMAX                     
                                        
: BLK->CRT                              
   DUP OFFSET @ + 0<                    
   ABORT" NEGATIVE SCRN NO."            
   BLOCK DUP NLINS +EDY + +EDY          
   DO I L#ADDR 0 C/L L->CRT40 C/L +     
      DUP                               
   LOOP DDROP ;                         
                                        
                                        
279  00 BYTE:IN BLKMAX  !NEW            
                                        
MAIN -->                                
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 120
( L L40 L64 LL LN LB     <12/16/85>260) 
APPENDIX                                
: <L>                                   
   PAGE BLKMAX @ OVER <                 
   ABORT" BEYOND BLKMAX" DUP SCR ! DUP  
   0 0 XYTAB 3 .R BLK->CRT              
   0 22 XYTAB ;                         
                                        
: L40                                   
   24 'NEW NLINS ! 0 'NEW +EDY !        
   40 'NEW C/L !   0 'NEW +EDX !        
   MODE40                               
   DEPTH 0> IF <L> THEN ;               
                                        
: L   L40 ;                             
: LL  SCR @ L ;                         
: LN  SCR @ 1+ L ;                      
: LB  SCR @ 1- L ;                      
                                        
MAIN -->                                
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 121
( COPY <Y/N>?            <12/21/85>261) 
APPENDIX                                
                                        
: COPY                                  
   ?2NUM OFFSET @ +                     
   SWAP BLOCK 2- !                      
   UPDATE SAVE-BUFFERS ;                
                                        
: (Y/N)?                                
   ."  (Y/N)? " XY@ 0                   
   BEGIN                                
      DROP                              
      DDUP XYTAB KEY DUP EMIT           
      DUP 78 = OVER 89 = OR             
   UNTIL 89 =                           
   >R DDROP R> ;                        
MAIN                                    
-->                                     
                                        
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 122
( <LINE> .LINE LIST      <12/16/85>262) 
APPENDIX                                
                                        
: <LINE>  BLOCK SWAP C/L * + C/L ;      
                                        
: .LINE  <LINE> -TRAILING TYPE ;        
                                        
: LIST                                  
   CR DUP SCR ! ." SCR #" U.            
   C/L 40 = IF 24 ELSE 16 THEN          
   0 DO                                 
      CR I 3 .R SPACE                   
      I SCR @ .LINE                     
      ?TERMINAL IF LEAVE THEN           
   LOOP CR ;                            
                                        
MAIN -->                                
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 123
( .M/D/Y SETDATE ETC.    <12/17/85>263) 
APPENDIX                                
                                        
  VARIABLE YEAR                         
  VARIABLE DAY                          
  VARIABLE MONTH                        
                                        
: .M/D/Y                                
   MONTH @ 2 .R ." /"                   
   DAY @ 2 .R ." /"                     
   YEAR @ 2 .R ;                        
                                        
: .HR:MIN ."  PAI " ;                   
                                        
: WHO"                                  
   'NEW .HR:MIN 3 + DUP 5 BL FILL       
   34 WORD COUNT 5 MIN ROT SWAP CMOVE ; 
                                        
: SETDATE  100 /MOD DROP                
   YEAR ! DAY ! MONTH ! ;               
                                        
MAIN -->                                
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 124
( PAUSE                  <12/21/85>264) 
APPENDIX                                
                                        
: PAUSE                                 
   ?TERMINAL                            
   IF 1000 0 DO LOOP                    
      BEGIN ?TERMINAL UNTIL             
      2000 0 DO LOOP                    
   THEN ;                               
                                        
                                        
                                        
12 00 BYTE:IN MONTH !NEW                
21 00 BYTE:IN DAY   !NEW                
85 00 BYTE:IN YEAR  !NEW                
                                        
DECIMAL MAIN -->                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 125
( <ONLY> <ALSO>          <12/17/85>265) 
APPENDIX                                
\ based on #VOCS = 8                    
                                        
: <ALSO> ( do not overwrite last voc )  
   CONTEXT DUP 2+ #VOCS 2* 4 - BMOVE ;  
                                        
: <ONLY>                                
   CONTEXT #VOCS 2* 0 FILL              
   [COMPILE] ROOT  CONTEXT @            
   #VOCS 2* 2- CONTEXT + ! <ALSO> ;     
                                        
: <ORDER>                               
   CR  0 PRIOR !  #VOCS 2* 0            
   DO CONTEXT I + @ DUP                 
      IF PRIOR @ OVER -                 
         IF DUP PRIOR !                 
            DUP NFA ID. SPACE           
      THEN THEN DROP                    
   2 +LOOP 2 SPACES                     
   CURRENT @ NFA <INV> ID. <NORM> ;     
                                        
MAIN -->                                
                               ( bobp ) 
-------------------------------------------- SCREEN 126
( .NF <VL> <<WORDS>>     <12/17/85>266) 
APPENDIX                                
: .NF ( nfa -- )                        
   DUP 2+ @ 41089 =  ( dummy voc link ) 
   IF CR <INV> NFA ID. <NORM> CR        
   ELSE                                 
      2+ DUP C@ 31 AND OUT @ + 5 +      
         C/L > IF CR THEN               
      SPACE SPACE ID.                   
   THEN ;                               
                                        
: <VL> ( lfa -- )                       
   BEGIN                                
      DUP 'NEW ROOT =                   
      OVER @ 0=  OR                     
      PAUSE QTERM  OR NOT               
   WHILE                                
      DUP .NF @                         
   REPEAT DROP CR ;                     
                                        
: <<WORDS>> ( voc -- ) DUP .NF @ <VL> ; 
                                        
MAIN -->                                
                               ( bobp ) 
-------------------------------------------- SCREEN 127
( <WORDS> <VLIST>        <12/17/85>267) 
APPENDIX                                
                                        
: <WORDS>                               
   CONTEXT @ <<WORDS>> ?TERMINAL DROP ; 
                                        
: <VLIST>                               
   [COMPILE] '  DUP 'X =                
   IF DROP 0 PRIOR !                    
      #VOCS 2* 0                        
      DO CONTEXT I + @ DUP              
         IF PRIOR @ OVER -              
            IF DUP PRIOR !              
               DUP <<WORDS>>            
         THEN THEN DROP                 
         ?TERMINAL IF LEAVE THEN        
      2 +LOOP                           
   ELSE                                 
      CR LFA <VL>                       
   THEN ?TERMINAL DROP ;                
                                        
MAIN -->                                
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 128
( WHERE                  <12/17/85>268) 
-->                                     
APPENDIX                                
                                        
: WHERE                                 
   PAGE SCR @ DUP BLK->CRT BLOCK        
   DUP >IN-ERR @ + 1-                   
   DUP C@ BL = IF 1- THEN               
   PAD 2- SWAP 0 3 PICK !               
   BEGIN                                
      DUP C@ BL = 0=                    
   WHILE                                
      1 3 PICK +! 1-                    
   REPEAT 1+ ROT -                      
   C/L /MOD +EDY + L#ADDR SWAP +EDX +   
   ROT @ 0                              
   DO DDUP + I +                        
      DUP C@ 128 XOR SWAP C!            
   LOOP DROP                            
   0 22 XYTAB SCR @ ." SCR = " . ;      
                                        
MAIN -->                                
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 129
( EXTRA                  <12/18/85>269) 
MAIN                                    
                                        
CR CR                                   
." Should not exceed 8192 (2000 hex):"  
2BEEP 2BEEP 2BEEP 2BEEP                 
                                        
STATUS?                                 
                                        
CREATE EXTRA STATUS?                    
                                        
16384 68 + DPNEW !                      
                                        
-->                                     
                                        
CR ." any key to continue: "            
KEY DROP CR CR                          
                                        
                                        
                                        
                                        
                                        
                                        
                                        
-------------------------------------------- SCREEN 130
( forward references     <12/20/85>270) 
HEX                                     
                                        
04 BYTE:IN <ABORT"> REPLACED:BY         
                              @APPENDIX 
06 BYTE:IN <ABORT"> REPLACED:BY WHERE1  
12 BYTE:IN <ABORT"> REPLACED:BY FORTH   
14 BYTE:IN <ABORT"> REPLACED:BY         
                            DEFINITIONS 
16 BYTE:IN <ABORT"> REPLACED:BY QUIT    
                                        
DECIMAL -->                             
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 131
( forward references     <12/21/85>271) 
                                        
00 BYTE:IN EXPECT  REPLACED:BY <EXPECT> 
                                        
00 BYTE:IN QUIT  REPLACED:BY <QUIT>     
                                        
00 BYTE:IN INTERPRET  REPLACED:BY       
                        <INTERPRET>     
                                        
00 BYTE:IN <DOVOC> REPLACED:BY <;CODE>  
                                        
-->                                     
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 132
( forward references     <12/21/85>272) 
                                        
00 BYTE:IN VOCABULARY  REPLACED:BY      
                        <VOCABULARY>    
                                        
00 BYTE:IN FORGET  REPLACED:BY <FORGET> 
                                        
00 BYTE:IN WORDS  REPLACED:BY <WORDS>   
                                        
00 BYTE:IN VLIST  REPLACED:BY <VLIST>   
                                        
00 BYTE:IN ONLY   REPLACED:BY <ONLY>    
                                        
00 BYTE:IN ALSO   REPLACED:BY <ALSO>    
                                        
                                        
DECIMAL -->                             
                                        
                                        
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 133
( forward references     <12/21/85>273) 
HEX                                     
                                        
( resolve null word )                   
08   BYTE:IN X  REPLACED:BY  STATE      
0C   BYTE:IN X  REPLACED:BY  ?STREAM    
                                        
( zap nfa of null word; make immediate) 
80C0 NFA:IN  X !NEW                     
                                        
( fix vocabulary links )                
00               LFA:IN ROOT   !NEW     
'NEW   ROOT      LFA:IN LIT    !NEW     
LFA:IN ALSO      'NEW   ROOT   !NEW     
LFA:IN <DODOES>  LFA:IN <DOVOC> !NEW    
                                        
( set up initial search order )         
'NEW FORTH  00 BYTE:IN CONTEXT !NEW     
'NEW FORTH  02 BYTE:IN CONTEXT !NEW     
'NEW ROOT   0E BYTE:IN CONTEXT !NEW     
                                        
DECIMAL -->                             
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 134
( ADJ VOC ETC,           <12/21/85>274) 
HEX                                     
                                        
( set up initial boot parameters )      
                                        
'NEW FORTH 04 + 00 BYTE:IN ICEBOX !NEW  
                                        
DPNEW @ DELTA - 02 BYTE:IN ICEBOX !NEW  
                                        
LAST @ DELTA -  04 BYTE:IN ICEBOX !NEW  
                                        
                                        
( set up latest )                       
                                        
LAST @ DELTA -  00 BYTE:IN FORTH  !NEW  
                                        
DECIMAL FORTH DEFINITIONS               
-->                                     
                                        
                                        
                                        
                                        
                                        
                               (  PAI ) 
-------------------------------------------- SCREEN 135
( APPENDIX ADJUSTMENTS   <12/17/85>275) 
                                        
( allow initial APPENDIX )              
                                        
0 COMP-SEG 'NEW OLD-DP !L               
                                        
( set pointers to appendix )            
                                        
APP-DPNEW @                             
   COMP-SEG 'NEW APP-DP !L              
                                        
APP-LAST @ DELTA -                      
   COMP-SEG 'NEW APP-LATEST !L          
                                        
( Hook in appendix between )            
( APP-LINK1 and APP-LINK2 )             
                                        
APP-LAST @ DELTA -                      
   COMP-SEG LFA:IN APP-LINK2 !L         
                                        
LFA:IN APP-LINK1                        
   COMP-SEG APP-START !L                
-->                                     
                               ( bobp ) 
-------------------------------------------- SCREEN 136
( FINISHED               <12/18/85>276) 
                                        
CR CR 2BEEP                             
." Compilation finished." CR CR         
                                        
STATUS?  CR                             
                                        
  CR ." 'EXTRA' is at "                 
                                        
  COMP-SEG 'NEW EXTRA                   
  DUP                                   
  DECIMAL . ." ("                       
  HEX     . ." hex)"                    
  DECIMAL                               
  CR CR                                 
                                        
QUIT                                    
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 137
(                        <12/17/85>277) 
EXIT                                    
: UWITHIN ( n lo hi -- 0/1 )            
   3 PICK U< >R U< R> OR NOT ;          
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( bobp ) 
-------------------------------------------- SCREEN 138
( <CMVZL>                <12/11/85>278) 
HEX APPENDIX                            
  LABEL ZCNT 0 C, 0 C,                  
( <z-pg cannot be used by this move> )  
( frseg toseg -- )                      
CODE <CMVZL>                            
  C013 LDA, 0<                          
  IF, 09 # LDA, ELSE, 08 # LDA,         
  THEN, HERE 1D + STA, CLC,             
  SEC LDA, 08 # ADC, HERE 1B + STA,     
  BOT LDA, 08 # ADC, HERE 1A + STA,     
  BEGIN,  BEGIN,                        
      ZCNT CPY, 0=                      
      IF, ZCNT 1+ DEC,                  
        0< IF, C0EE STA, POPTWO JMP,    
      THEN, THEN,                       
      C0AA STA, 2222 ,Y LDA, C0BB STA,  
      3333 ,Y STA,                      
      INY, 0=                           
    UNTIL,                              
    HERE 0A - INC, HERE 07 - INC,       
  AGAIN, C;                             
DECIMAL MAIN -->                        
                               ( 13:33) 
-------------------------------------------- SCREEN 139
( CMOVEZL                <12/11/85>279) 
HEX APPENDIX                            
                                        
( moves data from/to either seg )       
( within 0-1FF or D000-FFFF area)       
( <returns to orig z-pg> )              
( frseg fraddr toseg toaddr count -- )  
                                        
: CMOVEZL                               
   ASSEMBLER ZCNT !                     
   'NEW <CMVZL> 38 + ! SWAP             
   'NEW <CMVZL> 32 + ! <CMVZL> ;        
                                        
DECIMAL MAIN                            
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                               ( 13:33) 
