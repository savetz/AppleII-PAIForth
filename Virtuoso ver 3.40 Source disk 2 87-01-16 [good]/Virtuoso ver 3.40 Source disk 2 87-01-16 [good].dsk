( RELOADBLOCK            < 5/13/86>140)                                                                                 [EXEC]                                  FORGET #VARS                            [FORTH]                                                                         -->                                                                             EXIT                                                                            This disk contains the second part      of the source code for OpDB ver 3.00A                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \ LOADBLOCK              <12/17/85>141  \ To change variables/system constants  \ you must load from here.              \ To change disk areas definitions      \ you must reload disk 1.                                                                                               APPENDIX : MARKER ; MAIN                \ 145     LOAD \ ?VCLOSE                  151 153 THRU \ system constants/vars    154 250 THRU \ part 1 of systempproaching end of vir area"    THEN                                    HERE ;                                                                        ' ?VCLOSE CFA ' ?CLOSE                  CR ." ?VCLOSE patched intoused to compile code that may be      \ compiled or commmented, based on the  \ current definition of D(                                                      : D( NOOP ; IMMEDIATE                   : P( NOOP ; IMMEDIATE                   : R( NOOP ; IMMEDIATE                                                           \ the following may be forgotten if     \ they are off                          : ) \ -- ; so it will not bomb            ; IMMEDIATE                           : DEBUG-ON  ' NOOP CFA ' D( ! ;         : DEBUG-OFF ' (    CFA ' D( ! ;         : PRINT-ON  ' NOOP CFA ' P( ! ;         : PRINT-OFF ' (    CFA ' P( ! ;         : RUN-ON    ' NOOP CFA ' R( ! ;         : RUN-OFF   ' (    CFA ' R( ! ;                                                 : ?CR \ -- ; does a cr if not a leftmax )      \ num of variables allowed            6 CONSTANT #TYPES        ( no max )       \ num of types installed            200 CONSTANT #EXCODES      ( 255 max )      \ max number EXCODES                240 CONSTANT VBUF-LEN      ( no max )       \ length of variable data table      60 CONSTANT MAX-@ARGS     ( no max )       \ max bytes that can be read by         \ @ARGS                             500 CONSTANT SCR-BUF-LEN   ( no max )       \ max bytes that a single screen        \ may contain                        30 CONSTANT GS-MAX        ( no max )       \ gosub nesting depth * 2            80 CONSTANT MSG-BUF-LEN   ( no max )       \ largest single message             10 CONSTANT MAX-#MITEMS   ( no max )       \ maximum number of menu items        5 CONSTANT MAX-#MKEYS                     \ max # of special keys   ( FAH  )                                                                 ( SYSTEM CONSTANTS cont. < 9/16/85>152)                                         [LOADER] WARNOFF                          40 CONSTANT VS-MAX        ( no max )       \ max number of items that may          \ be placed on the variable stack       \ #vars * 2                          10 CONSTANT #LITS         ( no max )       \ number of literals in an expr     200 CONSTANT LBUF-LEN      ( no max )       \ length of literal data table       30 CONSTANT BS-MAX        ( no max )       \ max number of items that may          \ be placed on the stack used by        \ branching.  higher value allows       \ deeper nestingemptys the keyboard buffer          : EAT-KEYS \ -- ;                         BEGIN ?TERMINAL NOT UNTIL ;                                                     \ wait for key n to be pressed        : WAIT-KEY \ N -- ;                       EAT-KEYS                                BEGIN DUP KEY =                         UNTIL DROP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ( FAH  )                                                                 ( UPAR? DNAR? LFAR? RTAR?< 9/16/85>155)                                         [FORTH]                                                                         \ UPAR? and DNAR? must be extened to    \ allow users of non-//e systems the    \ ability to move up and down                                                   : UPAR? ( key -- T/F ) 11 = ;           : DNAR? ( key -- T/F ) 10 = ;                                                   : LFAR? ( key -- T/F )  8 = ;           : RTAR? ( key -- T/F ) 21 = ;                                                                                                                                                                                                                                                                                                                                                                                                                                                          ( FAH  )                                                                 ( "STACK" WORDS          < 9/16/85>156) [FORTH]                                 \ these words allow you to set up a     \ stack at an arbitrary locarion        \ stacks start at ^stack 2+ and grow    \ upwards, ^stack contains the address  \ of the top of the stack               \ no range checkin is performed                                                 : PUSH \ val ^stack -- ; push to stack     DUP @ 2+ DUP ROT ! ! ;               : POP \ ^stack -- val ; pop from stack     DUP @ @ -2 ROT +! ;                  : SDEPTH \ ^stack -- #vals; stack depth    DUP @ SWAP - 2/ ;                    : SCLEAR \ ^stack -- ; clear stack         DUP ! ;                                 \ read a copy of the nth item           \ 1 reads first, 2 reads second etc  : SPICK \ n ^stack -- val ;                @ SWAP 1- 2* - @ ;                                                                                                                                  ( FAH  )                                                                 ( RUN-ERR"               <12/19/85>157) [FORTH] WARNOFF                           \ prints runtime error messages         \ if the flag is true                   \ use: f RUN-ERR" Unable to convert"  X: <RUN-ERR"> \ f -- ;                    IF 1800 15 TONE 1200 25 TONE EXEC         BL WAIT-KEY PAGE TEXT 2BEEP             13 10 XYTAB ." RUN TIME ERROR"          R> DUP C@ 1+ OVER + >R                  20 OVER C@ 2/ - 12 XYTAB                COUNT TYPE                              14 14 XYTAB 2BEEP                       ." Press space." BL WAIT-KEY            0 22 XYTAB QUIT                       ELSE R> DUP C@ 1+ + >R                  THEN X;                               [EXEC]                                  : RUN-ERR"                                ?COMP X' <RUN-ERR"> CFA ,               34 WORD DUP C@ 1+ SWAP OVER             + C@ 34 = NOT ?STREAM ALLOT             ; IMMEDIATE                           WARNON                         ( FAH  )                                                                 ( HIBYTE LOBYTE          < 2/13/86>158) [FORTH]                                                                         : HIBYTE  0 256 U/MOD SWAP DROP ;       : LOBYTE  255 AND ;                                                             EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ( bobp )                                                                 ( VINFD? INVOCAB?        < 2/13/86>159)                                         [FORTH]                                 \ will search for name in the           \ vocabulary vocab only, will not       \ search FORTH                                                                  : <VFIND> \ name nfa -- {pfa 1}or{0}       0 <<FIND>   \ from 12-21-85 system      DUP IF SWAP DROP THEN ;                                                      : VFIND? \ name 'vocab -- <pfa 1> or 0    @ 2+ ( NFA of first word in vocab )     <VFIND> ;                                                                       \ Checks if word is in vocab          : INVOCAB? \ name 'vocab -- t/f           VFIND?                                  IF DROP 1 ELSE 0 THEN ;                                                                                                                                                                                                              ( bobp )                                                                 \ READ-SCR               <12/17/85>160  [EXEC]                                  CREATE SCR-BUF SCR-BUF-LEN ALLOT                                                VARIABLE EP  \ memory execution pointer VARIABLE DEP \ disk execution pointer   VARIABLE LAST-DEP \ start addr of            \ last screen read in                                                      \ reads from the current screen to      \ the end of the screen                 : READ-SCR \ -- T/F ; true if at end      DEP @ OPDB @DISK ?DUP                   IF DUP >R 2+ SCR-BUF-LEN >                 RUN-ERR" Screen too big to read"        DEP @ 2+ SCR-BUF R@ OPDB DISK>          0 SCR-BUF R@ + !                        ( end marker for RUN-SCR )              DEP @ LAST-DEP ! ( for GOSUB )          R> 2+ DEP +!                            0 ( operation succesful )            ELSE 1 ( end of system ) THEN           SCR-BUF EP ! ;                                                       \ FAH                                                                    ( ^@ARGS ^ARGS           <12/19/85>161)                                         [FORTH]                                                                         0 XCONST ^@ARGS                           \ holds the start of the last @ARGS                                           [EXEC]                                    \ points to the nth byte of data        \ in from the last @ARGS              CODE ^ARGS \ N -- ADR ;                   EXEC X' ^@ARGS ASM LDA, CLC,            BOT ADC,    BOT STA,                    EXEC X' ^@ARGS ASM 1+ LDA,              BOT 1+ ADC, BOT 1+ STA,                 NEXT JMP, C;                                                                                                                                                                                                                                                                                                                                                 ( FAH  )                                                                 \ @ARGS                  <12/17/85>162                                          [EXEC]                                                                            \ Sets ^@ARGS to EP                     \ advances EP by n bytes              CODE @ARGS \ N -- ;                       EXEC EP ASM LDA,                        EXEC X' ^@ARGS ASM STA,                 EXEC EP ASM 1+ LDA,                     EXEC X' ^@ARGS ASM 1+ STA,              CLC, BOT LDA,                           EXEC EP ASM ADC,                        EXEC EP ASM STA,                        BOT 1+ LDA,                             EXEC EP ASM 1+ ADC,                     EXEC EP ASM 1+ STA,                     POP JMP, C;                                                                                                                                                                                                                                                                  \ FAH                                                                    \ {@1arg} @1ARG          <12/17/85>163                                          [EXEC]                                     \ code subroutine that reads in one     \ byte at EP into accum and advances    \ EP by 1                                                                    CODE {@1arg} \ -- ; put arg in .A         EXEC EP ASM    LDA, N    STA,           EXEC EP ASM 1+ LDA, N 1+ STA,           # 0 LDY, N )Y LDA,                      EXEC EP ASM INC, 0=                     IF, EXEC EP ASM 1+ INC, THEN,           RTS, C;                                                                       CODE @1ARG \ N -- ;                       EXEC ' {@1arg} ASM JSR,                 DEX, BOT STY, ( Y=0 from above)         DEX, BOT STA, ( store arg )             NEXT JMP, C;                                                                                                                                                                                 \ FAH                                                                    \ @2ARG                  <12/17/85>164                                          [EXEC]                                                                          \ reads in one word at EP and place     \ on the stack advances EP by 2                                                 CODE @2ARG \ -- N ; read in a word        EXEC ' {@1arg} ASM JSR,                   ( read low byte)                      PHA,                                    EXEC ' {@1arg} ASM JSR,                   ( read hi byte)                       PUSH JMP,                             C;                                                                                                                                                                                                                                                                                                                                                                                                     \ FAH                                                                    ( ,OPDB C,OPDB           < 9/16/85>165)                                         [LOADER]                                  \ writes the word N to disk at the      \ current value of DEP, advances DEP  : ,OPDB \ N -- ;                          EXEC DEP @ OPDB !DISK 2 DEP +! ;                                                \ writes the byte N to disk at the      \ current value of EP, advances EP    : C,OPDB \ N -- ;                         EXEC DEP @ OPDB C!DISK 1 DEP +! ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ( FAH  )                                                                 ( 1TABLE 2TABLE          <12/18/85>166)                                         [FORTH] WARNOFF                                                                   \ tables are 1 based                    \ create a table of bytes             : 1TABLE \ N -- number of items           ?NUM                                    CREATE ALLOT                            DOES> SWAP 1- + C@ ;                                                            \ create a table of words             : 2TABLE \ N -- number of items           ?NUM                                    CREATE 2* ALLOT                         DOES> SWAP 1- 2* + @ ;                                                        WARNON                                                                                                                                                                                                                                                                         ( FAH  )                                                                 ( EXTBL RUN-EXCODE       <10/17/85>167) [EXEC]                                    \ table of execution address of         \ all EXCODES                                                                   CREATE EXTBL                             #EXCODES 2* ALLOT                                                            \ execute excode number n (0-255)       CODE RUN-EXCODE ( N -- )                  BOT LDY, DEY, TYA,                      .A ASL, CS                              IF, # 1 LDY, ELSE, # 0 LDY, THEN,       CLC,                                    # EXEC EXTBL ASM LOBYTE ADC, N STA,     TYA,                                    # EXEC EXTBL HIBYTE ASM ADC,            N 1+ STA, # 1 LDY,                      N )Y LDA, W 1+ STA, DEY,                N )Y LDA, W STA,                        INX, INX,                               W 1- JMP, C;                                                                                                                                                                          \ NEXT-EX#               <12/17/85>168                                          [FORTH]                                 VARIABLE EX# \ holds last defined       \ excode number,                                                                [LOADER]                                  \ get next available number 1 is 1st    \ EX# is incremented by !EXCODE       X: NEXT-EX# \ -- N ;                       EXEC EX# @ 1+ DUP #EXCODES < NOT        ABORT" no more excodes available"       DUP EX# ! X;                                                                                                                                                                                         [FORTH]                                 XVAR ^EXCODE 1 ALLOT                       \ holds CFA of execution part and       \ the number the new excode will get                                                                                                                                                                                         ( ^EXCODE EXCODE: EX;    < 2/13/85>169)                                         [LOADER]                                : EXCODE: \ -- ; headless compile         [EXEC] LOADER  ( to switch DP down )    HERE 255 AND 255 = ALLOT                 ( cfa can't cross page boundary )      HERE DUP ^EXCODE !                      NEXT-EX# DUP ^EXCODE 2+ C! \ save #     1- 2* EXEC EXTBL + !  \ set table       SP@ CSP !      ( error check words )    [EXEC]         ( force that vocab )   \ ' : CFA @ ,    ( lay down CFA for : )   [ ' : CFA @ ] LITERAL ,                 ] ;            ( compile mode )                                               [FORTH]                                 : EXCODE: LOADER                           [COMPILE] LOADER EXCODE: ;           : EX; \ -- ;                              ?CSP COMPILE <EXIT> [COMPILE] [       ; IMMEDIATE                                                                                                    ( bobp )                                                                 ( !EXCODE                <12/18/85>170) [LOADER]                                 \ used within the keywords to tell the  \ compiler to compile the number of     \ this excode (hard to explain see      \ examples)                                                                    X: <!EXCODE> \ -- ;                       R> DUP 1+ >R C@ C,OPDB X;             : !EXCODE \ -- ;                          COMPILE <!EXCODE>                       ^EXCODE 2+ C@ C,                      ; IMMEDIATE                                                                     [FORTH]                                 \ USE: IS-EXCODE name                   : IS-EXCODE ( -- )                        LOADER [LOADER] [EXEC]                  [COMPILE] ' CFA                         DUP EXEC ^EXCODE !                      NEXT-EX# DUP ^EXCODE 2+ C! \ save #     1- 2* EXEC EXTBL + !  \ set table     ;                                                                                                                                               \ INIT-EXCODES           <12/17/85>171  [LOADER]                                                                        \ does all initialization that is       \ needed to compile EXCODES from        \ scratch                                                                       EXEC EXTBL #EXCODES 2* 0 FILL           0 EX# !                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \ FAH                                                                    \ VAR-OPRS TYPE-OPRS     <12/17/85>172  [EXEC]                                                                            \ table of operators used to access     \ the variables in the next screen      XCREATE VAR-OPRS                          ] C@  C! [   ( 0 )                      ] @   !  [   ( 1 )                      ] D@  D! [   ( 2 )                                                            \ table of operators to use for each    \ type indexs to VAR-OPRS               \ set by ISTYPE                         EXEC #VARS LOADER 1TABLE TYPE-OPRS                                              \ length of data that must be reserved  \ for each type, set by ISTYPE          EXEC #VARS LOADER 1TABLE TYPE-LEN                                                                                                                                                                                                                                            \ FAH                                                                    \ DO-OPR                 <12/17/85>173  [EXEC]                                                                            \ execute the operator for type N       \ if R/W is true store else fetch     X: DO-OPR \ N R/W -- ;                    >R TYPE-OPRS ?DUP \ if not zero get        \ the value, else do nothing         IF 1- 4 * R> \ write?                     IF 2+ THEN \ point to store oper        VAR-OPRS + @ EXECUTE                  ELSE R> DROP                            THEN                                  X;                                                                                                                                                                                                                                                                                                                                                                                                                                             \ FAH                                                                    ( ISTYPE                 <12/19/85>174)                                         [EXEC] WARNOFF                                                                  X: ISTYPE-DOES                            DOES> \ -- type_id                        C@ X;                                                                       [FORTH] APPENDIX                          \ opr is from table on the last scr     \ if opr is 0 return the address      : ISTYPE                                  DEPTH 3 <                               ABORT" USE: len opr id ISTYPE name"     CREATE \ len opr id -- ;                  DUP >R 1- EXEC ' TYPE-OPRS + C!         R@ 1- ' TYPE-LEN + C!                   R> C,                                 ISTYPE-DOES ;                         MAIN                                                                            WARNON                                                                                                         ( FAH  )                                                        ( 15:57) ( TYPE DEFINITIONS       < 9/16/85>175) \ the expression evaluator, given two   \ types will always convert to the      \ type with the higher ID                                                       [TYPES] EXEC 0 WARNING !                \ len opr id                             1 1 1 ISTYPE CHAR    \ character        2 2 2 ISTYPE INT     \ signed single    2 2 3 ISTYPE CAR     \ unsigned sngl    4 3 4 ISTYPE DBL     \ signed double    0 0 5 ISTYPE STR     \ String           1 1 6 ISTYPE LOGIC   \ logical vars                                            1 WARNING !                             EXIT ------                                                                      1 1 1 ISTYPE CHARACTER                  2 2 2 ISTYPE INTEGER                    2 2 3 ISTYPE CARDINAL                   4 3 4 ISTYPE DOUBLE                     0 0 5 ISTYPE STRING                     ( no abbreviation for LOGIC )                                         ( FAH  )                                                                 \ LIT" true$ false$      <12/17/85>176                                          [FORTH]                                 : LIT"                                    34 WORD C@ 1+ ALLOT ;                                                         [LOADER]                                                                        XCREATE true$                             LIT" TRUE"                                                                    XCREATE false$                            LIT" FALSE"                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \ FAH                                                                    \ GET-WORD GET-INT GET-VA<12/17/85>177  [LOADER]                                  \ aborts if input stream exhausted    : MYWORD \ -- addr ;                       WORD DUP C@ NOT ?STREAM ;                                                    XVAR [>IN]                                \ reads word from stream              : GET-WORD \ -- adr ;                      >IN @ [>IN] ! BL MYWORD ;              \ unreads the last read word          : UNGET-WORD \ -- ;                        [>IN] @ >IN ! ;                        \ read a number from the input stream : GET-INT \ -- num ;                       GET-WORD NUMBER DROP ;                 \ get # of variable in input stream   : GET-VAR-NUM \ -- num ;                   LOADER GET-WORD \ read in dest var      ' VARIABLES VFIND? NOT                  ABORT" Var not defined"                 C@ ;                                                                                                        \ FAH                                                                    \ VARIABLE data areas    <12/17/85>178                                          [EXEC]                                    XCREATE VBUF  ( variables buffer )        VBUF-LEN ALLOT                                                                VARIABLE VP  ( variable pointer )                                               XVAR TVP ( temp var pointer )                                                      \ start-addr , type C,               CREATE VTABLE ( variables table )         #VARS 3 * ALLOT                                                               CREATE GSTACK ( gosub stack )             GS-MAX 2 * 2+ ALLOT                                                                                                                                                                                                                                                                                                                                        \ FAH                                                           ( 15:59) \ CLEANUP                <12/17/85>179  [EXEC]                                                                            \ performs cleanup between functional   \ excodes,  should be called at the     \ end of every excode that does not     \ need the stack                                                              : CLEANUP \ -- ;                          SP!         ( clear data stack )        VP @ TVP !                            ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \ FAH                                                                    ( @VADDR @VTYPE          < 2/13/86>180) [EXEC]                                                                            \ errors if invalid variable number   : CHECK-VAR# \ N -- N                     DUP 1 #VARS WITHIN NOT                  RUN-ERR" Invalid var #"                 DUP 1- 3 * VTABLE + 2+ C@ NOT           RUN-ERR" Var not defined" ;                                                   : >VADDR ( n -- addr' )                   CHECK-VAR#  1- 3 * VTABLE + ;                                                   \ returns address of variable n       : @VADDR \ N -- ADDR ;                    >VADDR @ ;                                                                      \ returns type of variable n          : @VTYPE \ N -- M ;                       >VADDR 2+ C@ ;                                                                                                                                                                               ( bobp )                                                                 \ @VAL !VAL              <12/17/85>181  [EXEC]                                                                            \ return the value of variable          \ n.  type of value returned varies     \ based on the type                     \ some types (like strings) return      \ their address                       : @VAL \ N -- value/addr ;                DUP @VADDR                              SWAP @VTYPE                             0 DO-OPR ;                                                                      \ given the proper value and a          \ variable number N store it          : !VAL \ Value n -- ;                     DUP @VADDR                              SWAP @VTYPE                             1 DO-OPR ;                                                                                                                                                                                                                           \ FAH                                                                    \ VS-DEPTH @VSTK !VSTK   <12/17/85>182                                          [LOADER]                                  XCREATE VSTACK                             VS-MAX 2* ALLOT                                                            X: VS-DEPTH \ -- N ; return # items       VSTACK SDEPTH X;                                                              X: @VSTK \ -- N ;                         VSTACK POP X;                                                                 X: !VSTK \ N -- ;                         VSTACK PUSH X;                                                                                                                                                                                                                                                                                                                                                                                                                               \ FAH                                                                    \ TVP-ROOM? $>TVP        <12/17/85>183  [EXEC]                                    \ checks to make sure that there is     \ room for N bytes in the VBUF area                                           X: TVP-ROOM? \ n -- ;                     TVP @ VBUF - + VBUF-LEN >               RUN-ERR" No room in temp area" X;                                               \ given an address and count of a       \ strign in memeory copy it to the      \ temp area of the variables            \ return its addr in the temp area      \ NOTE -- data is this area is not      \         valid after CLEANUP                                                 : $>TVP \ adr cnt -- temp_addr            DUP >R 2+ TVP-ROOM?                     R@ TVP @ C!    \ MAX count              R@ TVP @ 1+ C! \ string count           ( addr ) TVP @ 2+ R@ CMOVE \ move str   TVP @ R> 2+ TVP +! ;                                                                                         \ FAH                                                                    \ LITERAL: excodes       <12/17/85>184                                          \ string literal excode                 \ ARGS: cnt C, text                     EXCODE: \ -- addr                         @1ARG ( get count )                     DUP @ARGS 0 ^ARGS SWAP                  $>TVP EX;                                                                     [LOADER]                                                                        \ given the address of the string in    \ memory it is compiled into the opdb   \ at the current location                                                       X: !STR-LIT \ addr -- ;                   !EXCODE                                 DUP C@ 1+ DUP >R                        EXEC DEP @ SWAP OPDB >DISK              R> DEP +! X;                                                                                                                                                                                 \ FAH                                                                    \ LITERAL: excodes       <12/17/85>185                                          \ ARGS: value C,                        \ EXCODE: \ -- value ; for char, logic  \  @1ARG EX;                            EXEC IS-EXCODE @1ARG                    [LOADER]                                X: !BYTE-LIT \ value -- ;                  !EXCODE C,OPDB X;                                                            \ ARGS: value ,                         \ EXCODE: \ -- value; for INT & CAR     \ 2 @ARGS 0 ^ARGS @ EX;                 IS-EXCODE @2ARG                         [LOADER]                                X: !WORD-LIT \ Value -- ;                  !EXCODE ,OPDB X;                                                             EXCODE: \ -- dvalue; for DBL              4 @ARGS 0 ^ARGS D@ EX;                [LOADER]                                X: !DBL-LIT \ dvalue -- ;                  !EXCODE ,OPDB ,OPDB X;                                              \ FAH                                                                    \ LITERAL: tables        <12/17/85>186  [LOADER]                                                                          XCREATE LBUF  ( literal buffer )          LBUF-LEN ALLOT                                                                XVAR LP ( literal pointer )                                                     XCREATE LTABLE ( literal table )          #LITS 3 * ALLOT                                                             X: LP-ROOM? \ N -- ;                      LP @ LBUF - + LBUF-LEN >                ABORT" LP-ROOM? err" X;                                                                                                                                                                                                                                                                                                                                                                                                                      \ FAH                                                                    \ @LTYPE @LADDR          <12/17/85>187  [LOADER]                                  \ errors if invalid literal number    X: CHECK-LIT# \ N -- N                    DUP 1 #LITS WITHIN NOT                  ABORT" CHECK-LIT# err1"                 DUP 1- 3 * LTABLE + 2+ C@ NOT           ABORT" CHECK-LIT# err2" X;                                                    X: @LTYPE \ N -- M ; get type of lit      CHECK-LIT# 1- 3 * LTABLE + 2+ C@ X;                                           X: @LADDR \ N -- Addr ; adr of data       CHECK-LIT# 1- 3 * LTABLE + @ X;                                                                                                                                                                                                                                                                                                                                                                                                              \ FAH                                                                    \ !LIT                   <12/17/85>188  \ given a literal number the value of   \ that literal will be compiled                                                 [LOADER]                                X: !LIT \ N -- ; n must be positive        DUP @LTYPE TYPES                        DUP CHAR = OVER LOGIC = OR LOADER       IF DROP @LADDR C@                         !BYTE-LIT EXIT THEN                                                           TYPES DUP INT = OVER CAR = OR LOADER    IF DROP @LADDR @                          !WORD-LIT EXIT THEN                                                           TYPES DUP DBL = LOADER                  IF DROP @LADDR D@                         !DBL-LIT EXIT THEN                    TYPES STR = NOT LOADER                  ABORT" Error in !LIT"                                                           @LADDR                                  !STR-LIT X;                                                         \ FAH                                                                    \ COMPILE-VAR            <12/17/85>189  \ this is the excode that will be       \ called to fetch the value of a given  \ variable,  some types (like string)   \ return their address                                                          \ ARGS: var-num C,                      EXCODE:                                   @1ARG @VAL                              EX;                                                                           [LOADER]                                X: COMPILE-VAR \ N -- ;                   ?DUP \ do nothing if var# is zero       IF DUP 0< ( var or literal )             IF ABS !LIT                             ELSE                                      LOADER !EXCODE \ lay down GET-VAR       ( N ) C,OPDB   \ store argument       THEN                                   THEN X;                                                                                                                                              \ FAH                                                                    \ !VAR                   <12/17/85>190  \ At compile time variables are placed  \ on its own stack.  These arguments    \ are then compiled by the word         \ ,OPERANDS which deals with type       \ matching. ,OPERANDS calls COMPILE-VAR \ to store in the excode.                                                       [LOADER]                                  \ given a variable number, place its    \ type then its number in the queue   X: !VAR \ n -- ;                          VS-DEPTH VS-MAX 2- < NOT                ABORT" Expr too big"                    DUP EXEC @VTYPE LOADER                  SWAP                                    ( type   ) !VSTK                        ( number ) !VSTK X;                                                                                                                                                                                                                                                          \ FAH                                                                    \ BDEPTH INSCR? -INSCR?  <12/17/85>191  [LOADER]                                VARIABLE VAR# ( next var number )                                               : BDEPTH \ -- N ; # on branch stk         QUIT SDEPTH ;                                                                 : INSCR? \ -- ; Errors if not in a scr    BDEPTH 2 <                              ABORT" Within BEGIN .. END only" ;                                            : -INSCR? \ -- ; errors if in a screen    LOADER BDEPTH                           ABORT" Not within BEGIN ... END" ;                                            [EXEC]                                  \ check if there is room for N bytes    \ in the variable buffer area           \ prints error msg if no room           X: VROOM? \ N -- ;                        VP @ VBUF - + VBUF-LEN >                RUN-ERR" no room for var"             X;                                                                     \ FAH                                                                    \ CREATE-VAR             <12/17/85>192  [EXEC]                                                                           \ len is only used if the type is       \ variable length (ie STRING)          X: CREATE-VAR \ len type num -- ;         1- 3 * VTABLE + ( address of entry )    DDUP 2+ C!   ( store type )             VP @ SWAP !  ( start address )          TYPE-LEN ?DUP                           IF DUP VROOM?                            VP @ OVER 0 FILL ( clear var )          VP +!       ( inc variable pointer )    DROP ( len )                           ELSE ( len ) DUP 2+ VROOM?               DUP VP @ C! \ max cnt in 1st byte       VP @ 1+ OVER 1+ 0 FILL ( clr var )      2+ VP +!     ( inc variable pointer )  THEN X;                                                                                                                                                                                                                              \ FAH                                                                    \ CREATE-VAR excode      <12/17/85>193  \ ARGS: type C, num C,                  \   or  type C, num C, len C,           \       if TYPE-LEN of type is 0        EXCODE:                                   @1ARG ( type )                          @1ARG ( num )                           OVER TYPES STR = EXEC                   IF @1ARG ( get length of string )       ELSE 0 ( not used ) THEN                ROT ROT CREATE-VAR                      CLEANUP EX;                                                                   [LOADER]                                \ checks the name to make sure that is  \ an allowable variable name            : CHECK-VAR-NAME \ NAME -- ;              DUP ' VARIABLES INVOCAB?                ABORT" Variable exists"                 DUP ' KEYWORDS INVOCAB?                 SWAP ' OPERATORS INVOCAB? OR            ABORT" Reserved name" ;                                                                                      \ FAH                                                                    ( VARIABLE               < 9/16/85>194) [KEYWORDS]                                \ use: VARIABLE type options name     : VARIABLE \ -- ;                         LOADER -INSCR?                          VAR# @ EXEC #VARS < NOT                 ABORT" no more variables"               LOADER GET-WORD                         EXEC ' TYPES VFIND? NOT LOADER          ABORT" Invalid variable type"           !EXCODE CFA EXECUTE ( get type-id # )   DUP C,OPDB VAR# @ C,OPDB                ( type ) DUP TYPES STR = EXEC           IF LOADER GET-INT DUP C,OPDB            ELSE 0 THEN     ( type len )            SWAP VAR# @ EXEC CREATE-VAR LOADER      GET-WORD CHECK-VAR-NAME UNGET-WORD      0 WARNING !                             [VAR] CREATE 1 WARNING !                  LOADER VAR# @ C, ( compile var # )      1 VAR# +!                             DOES> \ -- ;                              C@ !VAR ;                                                          ( FAH  )                                                                 \ PREVAR prims, vars     <12/17/85>195  [EXEC] WARNOFF                          : VALUE 0 CONSTANT ;                    VALUE 1stVar# \ vars with # < this         \ may not be stored to               VALUE 1stUserVar# \ self explanitory    VALUE UserVP \ value that VP is            \ initialized to when compiling OPDB                                         [LOADER]                                X: CREATE-OPDB-VAR \ -- ;                 [VAR] CREATE                              LOADER VAR# @ C, ( compile var # )    DOES> \ -- ;                              C@ !VAR X;                                                                  [FORTH] WARNOFF                         X: CREATE-FORTH-VAR \ -- ;                [FORTH] CREATE                            LOADER VAR# @ C,                      DOES> \ -- addr ;                         C@ EXEC @VADDR X;                                                           WARNON                         \ FAH                                                                    ( PREVAR                 < 9/16/85>196)                                         [LOADER]                                  \ use: PREVAR type options name                                               : PREVAR \ -- ;                           GET-WORD EXEC ' TYPES VFIND? NOT        ABORT" type?" LOADER                    CFA EXECUTE ( get type id num )         DUP TYPES STR = EXEC                    IF LOADER GET-INT ( type len )          ELSE 0 THEN                             SWAP VAR# @ EXEC CREATE-VAR LOADER      GET-WORD CHECK-VAR-NAME                 UNGET-WORD CREATE-OPDB-VAR              UNGET-WORD CREATE-FORTH-VAR             1 VAR# +! ;                                                                   1 VAR# !   \ init vars for load         EXEC VBUF VP !  \ on next screen                                                                                                                                                               ( FAH  )                                                                 ( ALIAS                  < 5/13/86>197)                                         [FORTH]                                 \ Set last var to point to              \ a previously defined word.                                                    : ALIAS \ ADR -- ;                        LOADER VAR# @ 1- EXEC >VADDR ! ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ( FAH  )                                                                 ( PREDEFINED VARIABLES   < 2/12/86>198) [FORTH]                                 LOADER 1 VAR# !  \ init vars            EXEC   VBUF VP !                                                                LOADER VAR# @ EXEC TO 1stVar#                                                   \ pixels per text line                  LOADER PREVAR INT P/L                                                           \ current XY value                      LOADER PREVAR INT CURX                     FORTH ' GX ALIAS                                                             LOADER PREVAR INT CURY                     FORTH ' GY ALIAS                                                             \ last XY value set by AT               LOADER PREVAR INT LASTX                 LOADER PREVAR INT LASTY                                                                                                                                                                                                                                                 ( PREDEFINED VARIABLES   < 2/12/86>199) [FORTH]                                                                         \ current character spacing             LOADER PREVAR INT DX                       FORTH ' CDELX ALIAS                                                          LOADER PREVAR INT DY                       FORTH ' CDELY ALIAS                                                          \ default character spacing             LOADER PREVAR INT DX'                   LOADER PREVAR INT DY'                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ( bobp )                                                                 ( PREDEFINED VARIABLES co< 9/16/85>200)                                           \ default text FG , BG colors         LOADER PREVAR INT TFG'                  LOADER PREVAR INT TBG'                  \ current menu item number (starts at 1)LOADER PREVAR INT M-ITEM#                                                       \ these vars control the menu cursor    LOADER PREVAR INT M-CHAR  ( char val)   LOADER PREVAR INT M-COLOR ( char color) LOADER PREVAR INT M-ON    ( mode on)    LOADER PREVAR INT M-OFF   ( mode off)   LOADER PREVAR INT M-OFFS  ( x offset)   LOADER PREVAR INT M-BLINK ( blink speed) \ set M-BLINK to zero for no blink                                             LOADER VAR# @ EXEC TO 1stUserVar#       VP @ TO UserVP                          \ see previous screens for notes                                                                                                                                                               ( FAH  )                                                                 \ TYPE CONV: TOCHAR      <12/17/85>201  [EXEC]                                                                          X: TOCHAR-ERR \ F -- ; errors if flag     RUN-ERR" conv err (CHAR)" X;                                                  X: TOCHAR \ orig type -- char             TYPES DUP CHAR =  \ need to convert?    IF DROP EXIT THEN \ no, just exit       TYPES DUP DBL =                         IF DROP ( type )                         OVER 256 U< NOT OR ( out of range? )    EXEC TOCHAR-ERR EXIT                   THEN                                    DUP TYPES INT = SWAP CAR = OR           IF DUP 256 U< NOT  ( out of range? )      EXEC TOCHAR-ERR EXIT                  THEN                                    ( can't convert any other type)         1 EXEC TOCHAR-ERR                     X;                                                                                                                                                     \ FAH                                                                    \ TYPE CONV: TOINT       <12/17/85>202  [EXEC]                                                                          X: TOINT-ERR \ F -- ; errors if flag      RUN-ERR" conv err (INT)" X;                                                   X: TOINT \ orig type -- int               TYPES DUP INT =  \ need to convert?     IF DROP EXIT THEN  \ no just exit       TYPES DUP DBL =                         IF DROP ( type )                         DUP 0= SWAP -1 = OR NOT                 EXEC TOINT-ERR EXIT THEN               DUP TYPES CAR =                         IF DROP \ type, check range              DUP 0< EXEC TOINT-ERR EXIT THEN        TYPES CHAR = NOT EXEC TOINT-ERR       X;                                                                                                                                                                                                                                                                             \ FAH                                                                    \ TYPE CONV: TOCAR       <12/17/85>203  [EXEC]                                                                          X: TOCAR-ERR \ F -- ; errors if flag      RUN-ERR" conv err (CAR)" X;                                                   X: TOCAR \ orig type -- car               TYPES DUP CAR =  \ need to convert?     IF DROP EXIT THEN \ no, just exit       TYPES DUP DBL =                         IF DROP ( type )  ( hi word = 0 )        EXEC TOCAR-ERR EXIT THEN               DUP TYPES INT =                         IF DROP \ type, must be positive          DUP 0< EXEC TOCAR-ERR EXIT THEN       TYPES CHAR = NOT EXEC TOINT-ERR       X;                                                                                                                                                                                                                                                                                                                     \ FAH                                                                    \ TYPE CONV: TODBL       <12/17/85>204  [EXEC]                                                                          X: TODBL \ orig type -- dbl               TYPES DUP DBL =  \ need to convert?     IF DROP EXIT THEN \ no, just exit       DUP TYPES CHAR = OVER CAR = OR          IF DROP ( type ) 0 EXIT THEN            DUP TYPES INT =                         IF DROP ( type ) S->D EXIT THEN         EXEC                                    1 RUN-ERR" conv err (DBL)" X;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \ FAH                                                                    \ TYPE CONV: TOSTR       <12/17/85>205  [EXEC]                                  \ creates a string at the temporary     \ area that is cleared at the start of  \ each excode, returns the address of   \ the newly created string              X: TOSTR \ orig type -- addr ;            DUP TYPES STR =    ( no need to )       IF DROP EXIT THEN                       DUP TYPES CHAR =                        IF DROP ( type ) PAD C! ( ! char )       PAD 1 EXEC $>TVP EXIT THEN             DUP TYPES INT = OVER CAR = OR            OVER DBL = OR                          IF EXEC TODBL                            SWAP OVER DUP D+- <# #S ROT SIGN #>     $>TVP EXIT THEN                        DUP TYPES LOGIC =                       IF DROP ( type ) LOADER ( value )        IF true$ ELSE false$ THEN               COUNT EXEC $>TVP EXIT THEN             DROP ( type )                           1 RUN-ERR" conv err (STR)"            X;                             \ FAH                                                                    ( CONV-TBL !CONV         <12/19/85>206)                                         [LOADER]                                                                          \ byte numbers of excodes to convert    \ to that type, used by ,CONV                                                 EXEC #TYPES LOADER 1TABLE CONV-TBL                                              \ places the number of the last excode  \ compiled using EXCODE: in CONV-TBL    \ for use by ,CONV                                                              [FORTH] APPENDIX                        : !CONV \ type-id -- ;                    DUP 1 EXEC #TYPES WITHIN NOT            ABORT" !CONV err"                       1- LOADER ' CONV-TBL +                  ^EXCODE 2+ C@ SWAP C! ;                                                       MAIN                                                                                                                                                   ( FAH  )                                                                 \ TYPE CONV: excodes     <12/17/85>207                                          \ USE: convert to CHAR                  \ ARGS: type to convert from C,         EXCODE:                                   @1ARG TOCHAR EX;                      TYPES CHAR LOADER !CONV                                                         \ USE: convert to INT                   \ ARGS: type to convert from C,         EXCODE:                                   @1ARG TOINT EX;                       TYPES INT LOADER !CONV                                                          \ USE: convert to CAR                   \ ARGS: type to convert from C,         EXCODE:                                   @1ARG TOCAR EX;                       TYPES CAR LOADER !CONV                                                                                                                                                                                                                 \ FAH                                                                    \ TYPE CONV: excodes     <12/17/85>208                                          \ USE: convert to DBL                   \ ARGS: type to convert from C,         EXCODE:                                   @1ARG TODBL EX;                       TYPES DBL LOADER !CONV                                                                                                  \ USE: convert to STR                   \ ARGS: type to convert from C,         EXCODE:                                   @1ARG TOSTR EX;                                                               TYPES STR LOADER !CONV                                                                                                                                                                                                                                                                                                                                                                                 \ FAH                                                                    \ ,CONV                  <12/17/85>209  [LOADER]                                                                        \ compile EXCODE neccessary to convert  \ from type M to type N, aborts at load \ if not possible ( limited checking )                                          X: ,CONV \ M N -- ;                       DDUP = \ is the conversion needed?      IF DDROP EXIT THEN \ no                 DUP TYPES LOGIC =                       ABORT" Can't convert to LOGIC"          OVER TYPES STR =                        ABORT" Can't convert from STR"          ( to_type ) LOADER CONV-TBL C,OPDB        \ compile in EXCODE to convert          \ to type N                           C,OPDB                                    \ argument to the EXCODE is the         \ type to convert from              X;                                                                                                                                                     \ FAH                                                                    ( ,OPERANDS: notes       < 9/16/85>210) EXIT EXIT EXIT EXIT EXIT EXIT EXIT EXIT                                         This one word is totally responsible    for assuring that types match and if    they don't it is this word that takes   converting one or the other so that     they do match.                                                                  Given the V1, T1, V2, T2 where V is the variable number and t is the type                                               if T1 < T2 then compile:                  V1 conv(T2) V2 -- returns T2          if T1 > T2 then compile:                  V1 V2 conv(T1) -- returns T1                                                  conv(t) converts to type T                                                      The value that is returned is also      put back at the head of VSTK with       a variable number of 0 to indicate      the current type of the expression        ... cont ....                ( FAH  )                                                                 ( ,$OPRS                 < 9/16/85>211) \ when the destination type is string   \ always convert all operands to string                                         [LOADER]                                                                        VARIABLE dest-type \ set by GET-EXPR                                            : ,$OPRS \ -- str-id ;                    @VSTK ( T2 )                            @VSTK ( V2 )                            @VSTK ( T1 )                            @VSTK ( V1 )                            ( V1 ) COMPILE-VAR                      ( T1 ) TYPES STR LOADER ,CONV           ( V2 ) COMPILE-VAR                      ( T2 ) TYPES STR LOADER ,CONV           0 !VSTK      \ 0 means expres           TYPES STR LOADER                        DUP !VSTK    \ new type               ;                                                                                                                                                      ( FAH  )                                                                 \ ,OPERANDS              <12/17/85>212  [LOADER]                                                                          \ see previous screen for notes       : ,OPERANDS \ -- TYPE ;                   VS-DEPTH 4 <                            ABORT" Missing arguments"               dest-type @ TYPES STR LOADER =          IF ,$OPRS EXIT THEN                     @VSTK ( T2 ) @VSTK ( V2 ) >R >R         @VSTK ( T1 )                            @VSTK ( V1 ) COMPILE-VAR                R> ( T2 ) DDUP <    \ is T1<T2?         IF DDUP ,CONV       \ conv to T2        THEN                                    R> ( V2 ) COMPILE-VAR                   DDUP >              \ T1>T2?            IF SWAP DDUP ,CONV  \ conv to T1        THEN                                    SWAP DROP ( new type )                  0 !VSTK             \ 0 means expres    DUP !VSTK ;         \ new type                                                                               \ FAH                                                                    \ OPERATORS: notes       <12/17/85>213  EXIT ---------------------------------                                          Intellegent tables are created for all  operators that are to be supported in   the OPERATORS vocabulary.  When the     table is executed, it reads the         EXPR-TYPE'th byte of the table which    will contain the number of the excode   to do the desired operation for the     current expression type. If the byte    is zero it indicates an invalid         operation, otherwise ,OPERANDS is calledwhich deals with compiling in the       OPERANDS of the operation and assuring  that they are of matching type.  The    excode is then compiled into the OPDB.                                          Strings operators always create new     strings in the temp area which are      copied to the dest by :=                                                                                                                               \ FAH                                                                    \ OTBL                   <12/17/85>214                                          [LOADER]                                  \ see previous screen for notes         \ USE: OTBL name                                                              X: OTBL                                   CREATE \ -- ;                            HERE EXEC #TYPES ALLOT                  ( start ) #TYPES 0 FILL                DOES> \ -- ;                             DUP LOADER                              ,OPERANDS                               + C@ ?DUP NOT                           IF CR NFA ID.                              ." is not valid for type"               CR <ABORT>                           ELSE SWAP DROP                          THEN                                    C,OPDB X;                                                                                                                                                                                   \ FAH                                                                    \ !TTBL MAKE-TYPE        <12/17/85>215  [FORTH] APPENDIX                          \ to be findable in other vocabs                                                \ put last excode number in the         \ type table for the type               \ USE: type-id !TTBL tbl-name                                                 : !TTBL \ type-id -- ;                    DUP 1 EXEC #TYPES WITHIN NOT            ABORT" Invalid type number"             WARNOFF [COMPILE] ' + WARNON            LOADER ^EXCODE 2+ C@ SWAP C! ;                                                MAIN                                    [LOADER]                                  \ change result of last operation     X: MAKE-TYPE \ type-id -- ;                @VSTK DROP  ( throw away old type )     ( type-id ) !VSTK X;                                                                                                                                                                        \ FAH                                                                    \ LTBL                   <12/17/85>216  [LOADER]                                \ logic operators have a different      \ compile time behavior.  They promote  \ the value of the expression to logic                                            \ creates logic operator tables         \ USE: LTBL name                      X: LTBL                                   CREATE \ -- ;                            HERE EXEC #TYPES ALLOT                  ( start ) #TYPES 0 FILL                DOES> \ -- ;                             DUP LOADER                              ,OPERANDS                               + C@ ?DUP NOT                           IF CR NFA ID.                              ." is not valid for type"               CR <ABORT>                           ELSE SWAP DROP THEN                     C,OPDB                                  TYPES LOGIC LOADER MAKE-TYPE         X;                                                                     \ FAH                                                                    \ OPERATORS: tables      <12/17/85>217  [OPER] LOADER 0 WARNING !                                                         OTBL +    \ arithmetic operators        OTBL -                                  OTBL *                                  OTBL /                                  OTBL MOD                              \  := is handled by LET                                                           LTBL UC=   \ logical operators          LTBL =                                  LTBL <>                                 LTBL <                                  LTBL <=                                 LTBL >                                  LTBL >=                                                                       \ NOT, OR, AND are handled by single    \ excodes                                                                       1 WARNING !                                                                                                    \ FAH                                                                    \ OPERATORS: +           <12/17/85>218  \ + NOT VALID FOR: CHAR                                                         IS-EXCODE + \ N1 N2 -- N, INT & CAR     TYPES INT OPER !TTBL +                  TYPES CAR OPER !TTBL +                                                          IS-EXCODE D+ \ D1 D2 -- D , for DBL     TYPES DBL OPER !TTBL +                                                          EXCODE: \ ADR1 ADR2 -- ADR , for STR     SWAP ( addr2 addr1 )                    OVER 1+ C@ OVER 1+ C@ + ( new count )   PAD C! \ store it at PAD                DUP 1+ C@ ( cnt ) >R 2+ ( src )         PAD 1+ ( dest ) R@ CMOVE                 ( copy first string )                  DUP 1+ C@ ( cnt ) SWAP 2+ ( src )       PAD 1+ R> + ( dest ) ROT CMOVE           ( copy second string )                 PAD COUNT $>TVP ;                      TYPES STR OPER !TTBL +                                                                                         \ FAH                                                                    \ OPERATORS: -           <12/17/85>219  \ - NOT VALID FOR: CHAR, STR                                                    IS-EXCODE - \ N1 N2 -- N,INT & CAR      TYPES INT OPER !TTBL -                  TYPES CAR OPER !TTBL -                                                                                                                                          IS-EXCODE D- \ D1 D2 -- D , for DBL     TYPES DBL OPER !TTBL -                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \ FAH                                                                    \ OPERATORS: *           <12/17/85>220  \ * NOT VALID FOR: CHAR, STR, DBL                                               IS-EXCODE * \ N1 N2 -- N, INT & CAR     TYPES INT OPER !TTBL *                  TYPES CAR OPER !TTBL *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ FAH                                                                    \ OPERATORS: / MOD       <12/17/85>221  \ / NOT VALID FOR: CHAR, STR, DBL, LOG                                          IS-EXCODE / ( N1 N2 -- N , for INT )    TYPES INT OPER !TTBL /                                                          EXCODE: ( N1 N2 -- N, for CAR )           0 SWAP U/MOD SWAP DROP EX;            TYPES CAR OPER !TTBL /                                                          \ MOD NOT VALID: CHAR, STR, DBL, LOG    IS-EXCODE MOD ( N1 N2 -- N , for INT )  TYPES INT OPER !TTBL MOD                                                        EXCODE: ( N1 N2 -- N, for CAR )           0 SWAP U/MOD DROP EX;                 TYPES CAR OPER !TTBL MOD                                                                                                                                                                                                                                                                                               \ FAH                                                                    \ OPERATORS: UC=         <12/17/85>222  \ = that ignores case                   \ UC= VALID FOR: CHAR STR INT CAR                                               IS-EXCODE UC= \ N1 N2 -- T/F; CHAR INT  TYPES CHAR OPER !TTBL UC=               TYPES  INT OPER !TTBL UC=               TYPES  CAR OPER !TTBL UC=                                                       EXCODE: \ ADR1 ADR2 -- T/F ; STR          SWAP 1+ SWAP 1+ $= EX;                                                        TYPES  STR OPER !TTBL UC=                                                                                                                                                                                                                                                                                                                                                                                                                                                              \ FAH                                                                    \ OPERATORS: =           <12/17/85>223  \ = NOT VALID FOR: LOGIC                                                        IS-EXCODE = \ N1 N2--T/F;CHAR INT CAR   TYPES CHAR OPER !TTBL =                 TYPES  INT OPER !TTBL =                 TYPES  CAR OPER !TTBL =                                                         IS-EXCODE D= \ D1 D2 -- T/F; for DBL    TYPES  DBL OPER !TTBL =                                                         EXCODE: \ ADR1 ADR2 -- T/F                SWAP 1+ SWAP 1+ $= EX;                                                        TYPES  STR OPER !TTBL =                                                                                                                                                                                                                                                                                                                                                                                \ FAH                                                                    \ OPERATORS: <>          <12/17/85>224  \ <> NOT VALID FOR: LOGIC                                                       EXCODE: \ N1 N2 -- T/F; CHAR INT CAR      = NOT EX;                                                                     TYPES CHAR OPER !TTBL <>                TYPES  INT OPER !TTBL <>                TYPES  CAR OPER !TTBL <>                                                        EXCODE: \ D1 D2 -- T/F; for DBL           D= NOT EX;                                                                    TYPES  DBL OPER !TTBL <>                                                        EXCODE: \ ADR1 ADR2 -- T/F                SWAP 1+ SWAP 1+ $= NOT EX;                                                    TYPES  STR OPER !TTBL <>                                                                                                                                                                                                               \ FAH                                                                    \ OPERATORS: <           <12/17/85>225  \ < NOT VALID FOR: LOGIC                                                        IS-EXCODE < \ N1 N2 -- T/F; CHAR INT     TYPES CHAR OPER !TTBL <                 TYPES  INT OPER !TTBL <                                                        IS-EXCODE U< \ N1 N2 -- T/F; for CAR     TYPES  CAR OPER !TTBL <                                                        IS-EXCODE D< \ D1 D2 -- T/F; for DBL     TYPES  DBL OPER !TTBL <                                                        EXCODE: \ ADR1 ADR2 -- T/F                 SWAP 1+ SWAP 1+ $< EX;                                                        TYPES  STR OPER !TTBL <                                                                                                                                                                                                                                                                                               \ FAH                                                                    \ OPERATORS: <=          <12/17/85>226  \ <= NOT VALID FOR: LOGIC                                                       EXCODE: \ N1 N2 -- T/F; for CHAR, INT      > NOT EX;                             TYPES CHAR OPER !TTBL <=                TYPES  INT OPER !TTBL <=                                                       EXCODE: \ N1 N2 -- T/F; for CAR            SWAP U< NOT EX;                       TYPES  CAR OPER !TTBL <=                                                       EXCODE: \ D1 D2 -- T/F; for DBL            D> NOT EX;                            TYPES  DBL OPER !TTBL <=                                                       EXCODE: \ ADR1 ADR2 -- T/F                 SWAP 1+ SWAP 1+ $<= EX;                                                       TYPES  STR OPER !TTBL <=                                                                                                                                                                      \ FAH                                                                    \ OPERATORS: >           <12/17/85>227  \ > NOT VALID FOR: LOGIC                                                        EXCODE: \ N1 N2 -- T/F; for CHAR, INT      > EX;                                 TYPES CHAR OPER !TTBL >                 TYPES  INT OPER !TTBL >                                                        EXCODE: \ N1 N2 -- T/F; for CAR            SWAP U< EX;                           TYPES  CAR OPER !TTBL >                                                        EXCODE: \ D1 D2 -- T/F; for DBL            D> EX;                                TYPES  DBL OPER !TTBL >                                                        EXCODE: \ ADR1 ADR2 -- T/F                 SWAP 1+ SWAP 1+ $> EX;                                                        TYPES  STR OPER !TTBL >                                                                                                                                                                       \ FAH                                                                    \ OPERATORS: >=          <12/17/85>228  \ >= NOT VALID FOR: LOGIC                                                       EXCODE: \ N1 N2 -- T/F; for CHAR, INT      < NOT EX;                             TYPES CHAR OPER !TTBL >=                TYPES  INT OPER !TTBL >=                                                       EXCODE: \ N1 N2 -- T/F; for CAR            U< NOT EX;                            TYPES  CAR OPER !TTBL >=                                                       EXCODE: \ D1 D2 -- T/F; for DBL            D< NOT EX;                            TYPES  DBL OPER !TTBL >=                                                       EXCODE: \ ADR1 ADR2 -- T/F                 SWAP 1+ SWAP 1+ $>= EX;                                                       TYPES  STR OPER !TTBL >=                                                                                                                                                                      \ FAH                                                                    \ OPERATORS: NOT         <12/17/85>229  [LOADER]                                X: LOGIC? \ T -- ; checks if T is LOGIC    TYPES LOGIC = NOT                       ABORT" LOGIC expressions only" X;                                            \ valid only for: LOGIC                 IS-EXCODE NOT \ F -- 'F ;               [OPER]                                    \ If variable queue contains a logic    \ variable it is compiled, then the     \ EXCODE is compiled, otherwise the     \ EXCODE is just compiled.              0 WARNING !                           : NOT \ -- ;                               LOADER @VSTK ( type ) LOGIC?            @VSTK ( num ) COMPILE-VAR               !EXCODE                                 0 !VSTK \ indicates expression value    TYPES LOGIC LOADER !VSTK             ;  \ expression is now LOGIC                                                                                                                           \ FAH                                                                    \ OPERATORS: OR          <12/17/85>230  \ valid only for: LOGIC                                                         IS-EXCODE OR \ F F -- 'F ;                                                      [OPER]                                                                             \ compiles in its operands              \ then compiles itsvalid only for: LOGIC                                                         IS-EXCODE AND \ F F -- 'F ;                                                     [OPER]                                                                             \ compiles in its operands              \ then compiles its EXCODE           0 WARNING !                             : AND [ 1 WARNING ! ] \ -- ;               LOADER ,OPERANDS LOADER LOGIC?          !EXCODE                              ;                                                                                                                                                                                                                                                                                                                                                                                                                                              \ FAH                                                                    \ PRECEDENCE             <12/17/85>232                                          [LOADER]                                  XVAR IND-VAL ( handles paren )                                                   \ used by paren and functions to        \ make items in parens more import   : INDENT \ -- ;                            10 IND-VAL +! ;                                                                 \ reverses action of INDENT          : UNDENT \ -- ;                            -10 IND-VAL +! IND-VAL @ 0<             ABORT" Unmatched parenthesis" ;                                              [OPERS]                                 0 WARNING !                             : (   \ -- ;                              LOADER INDENT ;                                                               : )   \ -- ;                              LOADER UNDENT ;                       1 WARNING !                                                            \ FAH                                                                    \ PRECEDENCE cont        <12/17/85>233  [LOADER]                                \ if the top precedence pair is <=      \ to the one below then compile 2nd     \ precedence pair until the top pair    \ is > than the lower pair                                                      X: DEFER \ ... a n a n -- ... a n a n     IND-VAL @ +  \ makes items in parens      \ compile before items not in         BEGIN                                     3 PICK OVER < NOT                     WHILE DSWAP                               DROP ( prec value )                     EXECUTE \ routine which compiles         \ something or other                 REPEAT X;                                                                                                                                                                                                                                                                                                            \ FAH                                                                    \ PRECEDENCE cont        <12/17/85>234  [LOADER]                                \ USE: val PRECEDENCE name              \ compiling word which will create      \ word name (in the OPERATORS vocab)    \ that will place the CFA of the word   \ with the same name (in OPERS vocab)   \ on the stack plus the precedence val  \ It then calls DEFER                                                           : PRECEDENCE \ n -- ;                     DEPTH 1 <                               ABORT" USE: val PRECEDENCE name"        GET-WORD LOADER ' OPERS VFIND? NOT      ABORT" Not found in OPERS vocab"        UNGET-WORD  ( n pfa -- )                CONTEXT @                               [OPERS] 0 WARNING ! CREATE              1 WARNING ! CONTEXT !                    SWAP , ( n )                            CFA  , ( cfa )                         DOES> \ -- cfa n ;                       D@ DEFER ;                                                          \ FAH                                                                    \ PRECEDENCE cont        <12/17/85>235  [LOADER]                                                                          \ places dummy value on the stack     X: START-EXPR \ -- 'NOOP 0 ;               0 IND-VAL !     \ clear paren flags     ' NOOP CFA 0 X;  \ place dummy val                                             \ END-EXPR will compile all items that  \ remain on the stack                   \ returns the CFA of the precedence     \ pair with the zero value                                                    X: END-EXPR \ -- cfa ;                     0 1 DEFER \ defer will empty stack         \ up to the marker left by START     DDROP     \ the 0 1 from DEFER          IND-VAL @ OR                            ABORT" Expression error"             X;                                                                                                                                                                                             \ FAH                                                                    ( PRECEDENCE table       <10/30/85>236) LOADER                                                                            6 PRECEDENCE NOT                      ( 5 PRECEDENCE **   not done yet )        4 PRECEDENCE *                          4 PRECEDENCE /                          4 PRECEDENCE MOD                        3 PRECEDENCE +                          3 PRECEDENCE -                          2 PRECEDENCE UC=                        2 PRECEDENCE =                          2 PRECEDENCE <>                         2 PRECEDENCE <                          2 PRECEDENCE <=                         2 PRECEDENCE >                          2 PRECEDENCE >=                         1 PRECEDENCE AND                        1 PRECEDENCE OR                                                                                                                                                                                                                      ( FAH  )                                                                 \ !LITRL NEXT-LIT#       <12/17/85>237  [LOADER]                                                                        X: !LITRL \ type num -- ;                 VS-DEPTH VS-MAX 2- < NOT                ABORT" Too complex"                     ( number ) !VSTK                          ( type ) !VSTK X;                                                           XVAR LIT# ( last defined lit # )                                                 \ returns the next literal number       \ available or errors out if none       \ are available                        X: NEXT-LIT# \ -- N ;                     LIT# @ 1+ DUP #LITS >                   ABORT" Too many lits"                   DUP LIT# ! X;                                                                                                                                                                                                                                                                \ FAH                                                                    \ BYTE-LIT WORD-LIT      <12/17/85>238  [LOADER]                                                                          \ store data at LP @ then pass number   \ byte stored at LP and TYPE            \ sets up literal table and places      \ value on the variable stack         X: <LIT> \ type cnt -- ;                  >R NEXT-LIT# 1- 3 * LTABLE +            LP @ OVER !         \ ! addr            OVER SWAP 2+ C!     \ ! type            R> LP +!            \ in pointer        LIT# @ NEGATE !LITRL X;                                                       X: BYTE-LIT \ val type-id -- ;            1 LP-ROOM?                              SWAP LP @ C!       \ ! val in table     1 <LIT> X;                                                                                                                                                                                                                                                                   \ FAH                                                                    \ DBL-LIT STR-LIT        <12/17/85>239  [LOADER]                                                                        X: WORD-LIT \ val type-id -- ;            2 LP-ROOM?                              SWAP LP @ ! \ ! val in table            2 <LIT> X;                                                                    X: DBL-LIT \ dvalue -- ;                  4 LP-ROOM?                              LP @ D!     \ ! val in table            TYPES DBL 4 LOADER <LIT> X;                                                   X: STR-LIT \ adr -- ;                     DUP C@ 1+ DUP >R LP-ROOM?               R@ EXEC MAX-@ARGS LOADER >              ABORT" String literal too large"        LP @ R@ CMOVE \ move to table           TYPES STR R> LOADER <LIT> X;                                                                                                                                                                                                         \ FAH                                                                    ( empty                  < 9/16/85>240)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( FAH  )                                                                 \ NUM-LIT?               <12/17/85>241  \ tries to compile the string at addr   \ as a number                                                                   X: NUM-LIT? \ addr -- ;                   NUMBER DPL @ -1 = NOT                   ABORT" no decimal points in numbers"    DUP 0= OVER -1 = OR ( not a dbl? )      IF -1 = ( was it negative )              IF TYPES INT LOADER WORD-LIT            ELSE DUP 0< \ is it too big for int?     IF TYPES CAR LOADER WORD-LIT            ELSE TYPES INT LOADER WORD-LIT          THEN                                   THEN                                   ELSE DBL-LIT                            THEN X;                                                                                                                                                                                                                                                                                                              \ FAH                                                                    \ ISLIT?                 <12/17/85>242  [LOADER]                                                                        \ attempts to create a literal out      \ of the string at name                                                         X: ISLIT? \ name -- ;                     DUP true$ $=                            IF DROP ( name ) 1 TYPES LOGIC             LOADER BYTE-LIT EXIT THEN            DUP false$ $=                           IF DROP ( name ) 0 TYPES LOGIC             LOADER BYTE-LIT EXIT THEN            DUP 1+ C@ 34 = ( quote? )               IF DROP ( name ) UNGET-WORD                34 MYWORD DUP C@ 1 =                    \ if len=1 make it a char             IF 1+ C@ TYPES CHAR LOADER                 BYTE-LIT EXIT                        ELSE STR-LIT EXIT THEN                 THEN                                    NUM-LIT? X;                                                                                                  \ FAH                                                                    ( GET-EXPR notes         < 9/16/85>243) EXIT EXIT EXIT EXIT EXIT EXIT EXIT EXIT                                         given a type id, GET-EXPR will read the input stream and compile an expression  until another keyword or a comma is     encountered.  The resulting type of     that expression will be the same as the type ID that was passed to it or it     will error outthis word will deal with cleaning     \ up and making sure that the           \ expression returns the type that      \ was requested                                                                 X: TYPE-EXPR \ type-id -- ;               VS-DEPTH 2 = NOT                        ABORT" Missing value"                   @VSTK ( type )                          @VSTK ( var# or 0 for current expr)     COMPILE-VAR                             SWAP ,CONV X;                                                                                                                                                                                                                                                                                                                                                                                                                                \ FAH                                                                    \ GET-EXPR               <12/17/85>245  [LOADER]                                : GET-EXPR \ type-id -- ;                 DUP dest-type ! >R EXEC VP @ TVP !      LOADER LBUF LP ! 0 LIT# !               VSTACK SCLEAR START-EXPR                BEGIN GET-WORD ( name -- )                DUP LOADER ' KEYWORDS INVOCAB?          DUP IF UNGET-WORD THEN                  OVER @ 11265 ( , ) = OR NOT           WHILE ( name )                            LOADER ' VARIABLES VFIND? >R            HERE ( name )                           LOADER ' OPERATORS VFIND? R> OR         IF CFA EXECUTE                          ELSE HERE ( name ) ISLIT? THEN        REPEAT                                  DROP ( name )                           END-EXPR ' NOOP CFA = NOT               ABORT" GET-EXPR err"                    R> TYPE-EXPR ;                                                                                                                                       \ FAH                                                                    \ LET notes              <12/17/85>246                                          EXIT EXIT EXIT EXIT EXIT EXIT EXIT EXIT                                         LET first reads in the next word and    checks to be sure that it is a variable.Next LET reads in the next word, it     must be a := or a error message will    result. It then calls GET-EXPR to read  in the expression.  Next it lays down   the excode for the store, then the      destination variable number.  Thats allexcode             <12/17/85>247  \ this is the excode that is responsible\ for storing the result of the         \ expressions in the destination var.                                           \ ARG: var-num C,                       EXCODE: \ value -- ; for ALL              @1ARG ( var-num )                       DUP @VTYPE TYPES STR =                  IF \ string copy to dest string           EXEC @VADDR \ src-addr dest-addr        OVER 1+ C@ DUP >R \ real count          OVER C@    \ max count of dest          > RUN-ERR" No room in dest string"      SWAP 1+ ( point to count byte )         SWAP 1+ R> 1+ CMOVE                   ELSE \ normal store                       ( val n ) !VAL                        THEN                                    CLEANUP ;                                                                                                                                                                                    \ FAH                                                                    \ LET                    <12/17/85>248                                          [LOADER]                                 XCREATE ":="                               LIT" :="                                                                    [KEYWORDS]                                                                      : LET \ -- ;                              LOADER INSCR?                           GET-VAR-NUM DUP EXEC 1stVar# <          ABORT" Can't change this variable"      LOADER GET-WORD ":=" $= NOT             ABORT" := expected"                     ( var# ) DUP >R                         EXEC @VTYPE LOADER GET-EXPR             !EXCODE                                 R> C,OPDB ;                                                                                                                                                                                                                                                                  \ FAH                                                                    \ PAGINATE !PAGINATE     < 2/13/86>249  [FORTH]                                   XVAR PDISK#                             XVAR PSCR#                              XVAR PAGINATE?                          VARIABLE PXY 2 ALLOT 0 1 PXY D!                                               : PAGINATE \ -- ; asks if paginate        CR CR ." Include pagination marks" CR   ." when loading/running" (Y/N)?         PAGINATE? ! ;                                                                 : DOPAG                                   PAGINATE? @  ( print source number )    IF GXY@ PXY D@ GXYTAB                      PSCR# @ 0 <# #S DDROP 45 HOLD           PDISK# @ 0 #S #> GTYPE                  GXYTAB                               THEN ;                                \ use: DISK# number                     [KEYWORDS]                              : DISK# \ -- ;                            LOADER GET-INT PDISK# ! ;                                            \ FAH                                                                    \ !PAGINATE              <12/17/85>250                                          \ args: DISK# C, SCR# C,                EXCODE: \ -- ;                            @2ARG 0 4096 U/MOD                      PDISK# ! PSCR# !                        CLEANUP EX;                                                                                                           [LOADER]                                : !PAGINATE                               PAGINATE? @                             IF !EXCODE                                PDISK# @ 4096 *                         BLK @ + ,OPDB                         THEN ;                                                                        \ DISK# is used to make paginate much   \ more useful when more than one disk   \ of source code exists                                                                                                                                                                        \ FAH                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ( TEST WORDS             <10/ 9/85>279)                                                                                 : F                                       EXEC SCR-BUF-LEN 2/ 1- 0                DO I SCR-BUF I 2* + ! LOOP ;                                                  : T                                       EXEC SCR-BUF EP ! 0                     DO EP @ @2ARG I = NOT                    IF ." Wrong val at:" DUP . CR           THEN                                    EP @ OVER - 1-                          IF DROP                                 ELSE ." Skip error from:" . CR          THEN                                   LOOP ;                                                                                                                                                                                                                                                                                                               ( FAH  )                                                                 